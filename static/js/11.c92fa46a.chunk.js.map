{"version":3,"sources":["views/Dashboard/VaccinatedLineCard.js","views/Dashboard/chart/vaccination-chart.js","views/Dashboard/VaccineByAgeCard.js","views/Dashboard/CovidDataCard/index.js","views/Dashboard/StateWiseDataCard/index.js","views/Dashboard/index.js"],"names":["useStyles","makeStyles","theme","content","padding","paddingBottom","SalesLineCard","props","footerHtml","classes","useTheme","bgColor","chartData","footerData","title","vaccinedose","map","item","index","Grid","key","Box","mt","mb","p","container","direction","spacing","alignItems","Typography","variant","value","color","label","Card","CardContent","className","bgcolor","palette","primary","main","justify","type","height","options","chart","sparkline","enabled","dataLabels","colors","stroke","curve","width","yaxis","min","max","tooltip","fixed","x","show","y","formatter","marker","series","name","data","VaccineByAgeCard","matchDownMd","useMediaQuery","breakpoints","down","matchDownXs","useState","dataVaccineByAge","setVaccineByAge","useEffect","fetch","VACCINE_API","then","response","json","vaccinationByAge","CardHeader","t","Divider","xs","sm","md","Hidden","only","style","error","numDifferentiation","vac_18_45","vac_45_60","warning","above_60","secondary","marginTop","footer","textAlign","paddingLeft","paddingRight","common","white","flexDirection","up","primaryIcon","marginBottom","CovidDataCard","IconFooter","iconPrimary","iconFooter","IconPrimary","fontSize","TrendingUpIcon","TrendingDownIcon","footerIcon","primaryData","lg","background","DATA_URL","DATA_API_ROOT","table","minWidth","row","celllg","display","cellsm","confirmed","recovered","success","deceased","StateWiseDataCard","dataTable","setTable","getData","a","gridSpacing","component","TableContainer","Table","size","aria-label","TableHead","TableRow","TableCell","TableBody","Object","keys","STATE_NAMES","parseInt","total","toLocaleString","checkNumber","delta","tested","vaccinated","meta","population","CardActions","Button","arrowicon","verticalAlign","flatcardbody","flatcardblock","borderLeft","default","borderBottom","textsuccess","texterror","Dashboard","dataTotal","setTotal","dataDelta","setDelta","dataMeta","setMeta","getVaccineData","TT","console","log","chartAgeData","labels","legend","position","fontFamily","itemMargin","horizontal","vertical","conf","recv","decs","actv","confDelta","recvDelta","decsDelta","actvDelta","positivityRatio","toFixed","activeRatio","recoveredRatio","fatalityRatio","vaccinatedRatio","seconddosevaccinated","arrowCnf","arrowAct","arrowRecv","arrowDecs","HotelTwoToneIcon","HowToRegTwoToneIcon","FavoriteTwoToneIcon","SentimentVeryDissatisfiedTwoToneIcon","VaccinatedLineCard","VaccinatedLineData","firstdosevaccinated","align","zeroMinWidth","LinearProgress"],"mappings":"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","file":"static/js/11.c92fa46a.chunk.js","sourcesContent":["import React from 'react';\nimport { useTheme } from '@material-ui/styles';\nimport Chart from 'react-apexcharts';\n\nimport { Box, Card, CardContent, Grid, makeStyles, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        padding: 0,\n        paddingBottom: '0 !important',\n    },\n}));\n\nconst SalesLineCard = (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const { bgColor, chartData, footerData, title, vaccinedose } = props;\n\n    let footerHtml;\n    if (footerData) {\n        footerHtml = footerData.map((item, index) => {\n            return (\n                <Grid item key={index}>\n                    <Box mt={3} mb={3} p={1}>\n                        <Grid container direction=\"column\" spacing={1} alignItems=\"center\">\n                            <Typography variant=\"h4\">{item.value}</Typography>\n                            <Typography variant=\"subtitle2\" color=\"secondary\">\n                                {item.label}\n                            </Typography>\n                        </Grid>\n                    </Box>\n                </Grid>\n            );\n        });\n    }\n\n    return (\n        <Card>\n            <CardContent className={classes.content}>\n                <Box color=\"#fff\" bgcolor={bgColor ? bgColor : theme.palette.primary.main} p={3}>\n                    <Grid container direction=\"column\" spacing={1}>\n                        <Grid item container justify=\"space-between\" alignItems=\"center\">\n                            {title && (\n                                <Grid item>\n                                    <Typography variant=\"subtitle1\" color=\"inherit\">\n                                        {title}\n                                    </Typography>\n                                </Grid>\n                            )}\n                            <Grid item>\n                                <Grid container alignItems=\"center\">\n                                    {vaccinedose && (\n                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                            {vaccinedose}\n                                        </Typography>\n                                    )}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        {chartData && (\n                            <Grid item>\n                                <Chart {...chartData} />\n                            </Grid>\n                        )}\n                    </Grid>\n                </Box>\n                {footerData && (\n                    <Grid container justify=\"space-around\" alignItems=\"center\">\n                        {footerHtml}\n                    </Grid>\n                )}\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default SalesLineCard;\n","const chartData = {\n    type: 'line',\n    height: 115,\n    options: {\n        chart: {\n            sparkline: {\n                enabled: true,\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        colors: ['#fff'],\n\n        stroke: {\n            curve: 'smooth',\n            width: 3,\n        },\n        yaxis: {\n            min: 20,\n            max: 100,\n        },\n        tooltip: {\n            theme: 'dark',\n            fixed: {\n                enabled: false,\n            },\n            x: {\n                show: false,\n            },\n            y: {\n                title: {\n                    formatter: () => 'Sales/Order Per Day',\n                },\n            },\n            marker: {\n                show: false,\n            },\n        },\n    },\n    series: [\n        {\n            name: 'series1',\n            data: [55, 35, 75, 25, 90, 50],\n        },\n    ],\n};\n\nexport default chartData;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { useTheme } from '@material-ui/styles';\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, Divider, Hidden, Grid, Typography, useMediaQuery } from '@material-ui/core';\n\nimport { VACCINE_API, numDifferentiation } from './../../store/constant';\n\nconst VaccineByAgeCard = (props) => {\n    const theme = useTheme();\n    const matchDownMd = useMediaQuery(theme.breakpoints.down('sm'));\n    const matchDownXs = useMediaQuery(theme.breakpoints.down('xs'));\n    const { chartData } = props;\n\n    const [dataVaccineByAge, setVaccineByAge] = useState([]);\n\n    const getVaccineByAge = () => {\n        fetch(VACCINE_API)\n          .then((response) => {\n            return response.json();\n          })\n          .then((json) => {\n            setVaccineByAge(json.vaccinationByAge);\n        });\n    }\n\n    useEffect(() => {\n        getVaccineByAge();\n    }, []);\n\n    return (\n        <Card>\n            <CardHeader\n                title={\n                    <Typography t=\"div\" className=\"card-header\">\n                        Vaccination By Age\n                    </Typography>\n                }\n            />\n            <Divider />\n            <CardContent>\n                <Grid container spacing={2} direction={matchDownMd && !matchDownXs ? 'row' : 'column'}>\n                    <Grid item xs={12} sm={7} md={12}>\n                        <Chart {...chartData} />\n                    </Grid>\n                    <Hidden only=\"sm\">\n                        <Grid item>\n                            <Divider />\n                        </Grid>\n                    </Hidden>\n                    <Grid\n                        item\n                        container\n                        direction={matchDownMd && !matchDownXs ? 'column' : 'row'}\n                        justify=\"space-around\"\n                        alignItems=\"center\"\n                        xs={12}\n                        sm={5}\n                        md={12}\n                    >\n                        <Grid item>\n                            <Grid container direction=\"column\" alignItems=\"center\">\n                                <Typography variant=\"h6\">18 - 45</Typography>\n                                <Typography variant=\"subtitle1\" style={{ color: theme.palette.error.main }}>\n                                    {numDifferentiation(dataVaccineByAge.vac_18_45)}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Grid container direction=\"column\" alignItems=\"center\">\n                                <Typography variant=\"h6\">45 - 60</Typography>\n                                <Typography variant=\"subtitle1\" style={{ color: theme.palette.primary.main }}>\n                                        {numDifferentiation(dataVaccineByAge.vac_45_60)}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Grid container direction=\"column\" alignItems=\"center\">\n                                <Typography variant=\"h6\">Above 60</Typography>\n                                <Typography variant=\"subtitle1\" style={{ color: theme.palette.warning.main }}>\n                                    {numDifferentiation(dataVaccineByAge.above_60)}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default VaccineByAgeCard;\n","import React from 'react';\n\nimport { makeStyles, Card, CardContent, Grid, Typography } from '@material-ui/core';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport TrendingDownIcon from '@material-ui/icons/TrendingDown';\n\nconst useStyles = makeStyles((theme) => ({\n    secondary: {\n        marginTop: '.5rem',\n    },\n    footer: {\n        textAlign: 'center',\n        padding: theme.spacing(1.2),\n        paddingLeft: '20px',\n        paddingRight: '20px',\n        color: theme.palette.common.white,\n    },\n    container: {\n        [theme.breakpoints.down('sm')]: {\n            flexDirection: 'column-reverse',\n        },\n        [theme.breakpoints.up('sm')]: {\n            alignItems: 'center',\n        }\n    },\n    primaryIcon: {\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '.5rem',\n        }\n    }\n}));\n\nconst CovidDataCard = (props) => {\n    const { primary, secondary, iconPrimary, color, footerData, iconFooter } = props;\n    const classes = useStyles();\n\n    const IconPrimary = iconPrimary;\n    const primaryIcon = iconPrimary ? <IconPrimary fontSize=\"large\" /> : null;\n\n    let IconFooter;\n    if(iconFooter === 1) {\n        IconFooter = TrendingUpIcon;\n    }\n    if(iconFooter === 2) {\n        IconFooter = TrendingDownIcon;\n    }\n    const footerIcon = IconFooter ? <IconFooter /> : null;\n    const primaryData = primary ? primary : 0;\n\n    return (\n        <Card>\n            <CardContent>\n                <Grid container justify=\"space-between\" className={classes.container}>\n                    <Grid item lg={6} sm={6} xs={12}>\n                        <Typography variant=\"h3\" style={{ color: color }}>\n                            {primaryData}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" className={classes.secondary}>\n                            {secondary}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"h2\" style={{ color: color }} className={classes.primaryIcon}>\n                            {primaryIcon}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <div style={{ background: color }}>\n                <Grid container justify=\"space-between\" className={classes.footer}>\n                    <Grid item>\n                        <Typography variant=\"body2\">{footerData}</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"body2\">{footerIcon}</Typography>\n                    </Grid>\n                </Grid>\n            </div>\n        </Card>\n    );\n};\n\nexport default CovidDataCard;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n    Card,\n    CardHeader,\n    Divider,\n    Grid,\n    CardContent,\n    CardActions,\n    Typography,\n    Button,\n} from '@material-ui/core';\n\nimport { DATA_API_ROOT, gridSpacing, STATE_NAMES, numDifferentiation, checkNumber } from '../../../store/constant';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst DATA_URL = `${DATA_API_ROOT}/data.min.json`;\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        minWidth: 350,\n    },\n    row: {\n        padding: '1rem',\n        paddingLeft: '1.5rem',\n        paddingRight: '1.5rem',\n    },\n    celllg: {\n        padding: '1rem',\n        paddingLeft: '1.5rem',\n        paddingRight: '1.5rem',\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n    cellsm: {\n        padding: '1rem',\n        paddingLeft: '1.5rem',\n        paddingRight: '1.5rem',\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    confirmed: {\n        color: theme.palette.error.main,\n        fontSize: 12,\n    },\n    recovered: {\n        color: theme.palette.success.main,\n        fontSize: 12,\n    },\n    deceased: {\n        color: theme.palette.warning.main,\n        fontSize: 12,\n    },\n}));\n\nexport default function StateWiseDataCard() {\n    const classes = useStyles();\n\n    const [dataTable, setTable] = useState([]);\n\n    const getData = async () => {\n        await fetch(DATA_URL)\n          .then((response) => {\n            return response.json();\n          })\n          .then((json) => {\n            setTable(json);\n          });\n      }\n      \n    useEffect(() => {\n        getData();\n    }, []);\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Card>\n                    <CardHeader\n                        title={\n                            <Typography component=\"div\" className=\"card-header\">\n                                State-wise Data\n                            </Typography>\n                        }\n                    />\n                    <Divider />\n                    <CardContent className=\"p-0\">\n                        <TableContainer>\n                            <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell className={classes.row}>State</TableCell>\n                                        <TableCell>Confirmed</TableCell>\n                                        <TableCell>Active</TableCell>\n                                        <TableCell>Recovered</TableCell>\n                                        <TableCell>Deceased</TableCell>\n                                        <TableCell>Tested</TableCell>\n                                        <TableCell>Vaccinated</TableCell>\n                                        <TableCell>Population</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {Object.keys(dataTable).map((row, index) => (\n                                        <TableRow key={index}>\n                                            <TableCell className={classes.celllg}>{STATE_NAMES[row]}</TableCell>\n                                            <TableCell className={classes.cellsm}>{row}</TableCell>\n                                            <TableCell><div>{parseInt(dataTable[row].total.confirmed).toLocaleString('en-IN')}</div><div className={classes.confirmed}>{checkNumber(parseInt(dataTable[row].delta?.confirmed).toLocaleString('en-IN'))}</div></TableCell>\n                                            <TableCell>{(parseInt(dataTable[row].total.confirmed) - parseInt(dataTable[row].total.recovered) - parseInt(dataTable[row].total.deceased)).toLocaleString('en-IN')}</TableCell>\n                                            <TableCell><div>{parseInt(dataTable[row].total.recovered).toLocaleString('en-IN')}</div><div className={classes.recovered}>{checkNumber(parseInt(dataTable[row].delta?.recovered).toLocaleString('en-IN'))}</div></TableCell>\n                                            <TableCell><div>{parseInt(dataTable[row].total.deceased).toLocaleString('en-IN')}</div><div className={classes.deceased}>{checkNumber(parseInt(dataTable[row].delta?.deceased).toLocaleString('en-IN'))}</div></TableCell>\n                                            <TableCell>{numDifferentiation(parseInt(dataTable[row].total.tested))}</TableCell>\n                                            <TableCell>{numDifferentiation(parseInt(dataTable[row].total.vaccinated))}</TableCell>\n                                            <TableCell>{numDifferentiation(parseInt(dataTable[row].meta.population))}</TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </CardContent>\n                    <CardActions className=\"f-right\">\n                        <Button variant=\"text\" size=\"small\" color=\"primary\">\n                            View all States\n                        </Button>\n                    </CardActions>\n                </Card>\n            </Grid>\n        </Grid>\n    );\n}\n","import React from 'react';\nimport { makeStyles, Grid, Card, CardHeader, CardContent, Hidden, Typography, Divider, LinearProgress } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useState, useEffect } from 'react';\nimport HotelTwoToneIcon from '@material-ui/icons/HotelTwoTone';\nimport HowToRegTwoToneIcon from '@material-ui/icons/HowToRegTwoTone';\nimport FavoriteTwoToneIcon from '@material-ui/icons/FavoriteTwoTone';\nimport SentimentVeryDissatisfiedTwoToneIcon from '@material-ui/icons/SentimentVeryDissatisfiedTwoTone';\nimport value from '../../assets/scss/_themes-vars.scss';\nimport VaccinatedLineCard from './VaccinatedLineCard';\nimport VaccinatedLineData from './chart/vaccination-chart';\n\nimport VaccineByAgeCard from './VaccineByAgeCard';\n\nimport CovidDataCard from './CovidDataCard';\nimport StateWiseDataCard from './StateWiseDataCard';\n\nimport { DATA_API_ROOT, VACCINE_API, gridSpacing, numDifferentiation } from './../../store/constant';\nconst DATA_URL = `${DATA_API_ROOT}/data.min.json`;\n\nconst useStyles = makeStyles((theme) => ({\n    arrowicon: {\n        '& svg': {\n            width: '20px',\n            height: '20px',\n            verticalAlign: 'top',\n        },\n    },\n    flatcardbody: {\n        padding: '0px !important',\n        '& svg': {\n            width: '40px',\n            height: '40px',\n        },\n    },\n    flatcardblock: {\n        padding: '25px 25px',\n        borderLeft: '1px solid' + theme.palette.background.default,\n        [theme.breakpoints.down('xs')]: {\n            borderLeft: 'none',\n            borderBottom: '1px solid' + theme.palette.background.default,\n        },\n        [theme.breakpoints.down('sm')]: {\n            borderBottom: '1px solid' + theme.palette.background.default,\n        },\n    },\n    textsuccess: {\n        color: theme.palette.success.main,\n    },\n    texterror: {\n        color: theme.palette.error.main,\n    },\n}));\n\nconst Dashboard = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const [dataTotal, setTotal] = useState([]);\n    const [dataDelta, setDelta] = useState([]);\n    const [dataMeta, setMeta] = useState([]);\n    const [dataVaccineByAge, setVaccineByAge] = useState([]);\n\n    const getVaccineData = async () => {\n        await fetch(VACCINE_API)\n          .then((response) => {\n            return response.json();\n          })\n          .then((json) => {\n            setVaccineByAge(json.vaccinationByAge);\n          });\n    }\n\n    const getData = async () => {\n        await fetch(DATA_URL)\n          .then((response) => {\n            return response.json();\n          })\n          .then((json) => {\n            setTotal(json.TT.total);\n            setDelta(json.TT.delta);\n            setMeta(json.TT.meta);\n          });\n    }\n      \n    useEffect(() => {\n            getData();\n            getVaccineData();\n    }, []);\n\n    console.log(\"hii\");\n\n    const chartAgeData = {\n        height: 230,\n        type: 'donut',\n        options: {\n            chart: {\n                type: 'donut',\n            },\n            dataLabels: {\n                enabled: false,\n            },\n            labels: ['18 - 45', '45 - 60', 'Above 60'],\n            legend: {\n                show: true,\n                position: 'bottom',\n                fontFamily: 'inherit',\n                labels: {\n                    colors: 'inherit',\n                    fontFamily: 'inherit',\n                },\n            },\n            itemMargin: {\n                horizontal: 10,\n                vertical: 10,\n            },\n            colors: [value.error, value.primary, value.warning],\n        },\n        series: [dataVaccineByAge.vac_18_45, dataVaccineByAge.vac_45_60, dataVaccineByAge.above_60],\n    }\n\n    const conf = numDifferentiation(dataTotal.confirmed);\n    const recv = numDifferentiation(dataTotal.recovered);\n    const decs = numDifferentiation(dataTotal.deceased);\n    const actv = numDifferentiation(dataTotal.confirmed - dataTotal.recovered - dataTotal.deceased);\n    const confDelta = parseInt(dataDelta.confirmed).toLocaleString('en-IN');\n    const recvDelta = parseInt(dataDelta.recovered).toLocaleString('en-IN');\n    const decsDelta = parseInt(dataDelta.deceased).toLocaleString('en-IN');\n    const actvDelta = parseInt(dataDelta.confirmed - dataDelta.recovered - dataDelta.deceased).toLocaleString('en-IN');\n    const positivityRatio = ((dataTotal.confirmed / dataTotal.tested)*100).toFixed(2);\n    const activeRatio = (((dataTotal.confirmed - dataTotal.recovered - dataTotal.deceased) / dataTotal.confirmed)*100).toFixed(2);\n    const recoveredRatio = ((dataTotal.recovered / dataTotal.confirmed)*100).toFixed(2);\n    const fatalityRatio = ((dataTotal.deceased / dataTotal.confirmed)*100).toFixed(2);\n    const vaccinatedRatio = ((dataTotal.seconddosevaccinated / dataMeta.population)*100).toFixed(2);\n\n    let arrowCnf=0, arrowAct=0, arrowRecv=0, arrowDecs=0;\n    if(dataDelta.confirmed > 0) { arrowCnf = 1 } else { arrowCnf = 2 }\n    if(dataDelta.confirmed - dataDelta.recovered - dataDelta.deceased > 0) { arrowAct = 1 } else { arrowAct = 2 }\n    if(dataDelta.recovered > 0) { arrowRecv = 1 } else { arrowRecv = 2 }\n    if(dataDelta.deceased > 0) { arrowDecs = 1 } else { arrowDecs = 2 }\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={3} sm={6} xs={6}>\n                        <CovidDataCard\n                            primary={conf}\n                            secondary=\"Confirmed\"\n                            color={theme.palette.error.main}\n                            footerData={confDelta}\n                            iconPrimary={HotelTwoToneIcon}\n                            iconFooter={arrowCnf}\n                        />\n                    </Grid>\n                    <Grid item lg={3} sm={6} xs={6}>\n                        <CovidDataCard\n                            primary={actv}\n                            secondary=\"Active\"\n                            color={theme.palette.primary.main}\n                            footerData={actvDelta}\n                            iconPrimary={HowToRegTwoToneIcon}\n                            iconFooter={arrowAct}\n                        />\n                    </Grid>\n                    <Grid item lg={3} sm={6} xs={6}>\n                        <CovidDataCard\n                            primary={recv}\n                            secondary=\"Recovered\"\n                            color={theme.palette.success.main}\n                            footerData={recvDelta}\n                            iconPrimary={FavoriteTwoToneIcon}\n                            iconFooter={arrowRecv}\n                        />\n                    </Grid>\n                    <Grid item lg={3} sm={6} xs={6}>\n                        <CovidDataCard\n                            primary={decs}\n                            secondary=\"Deceased\"\n                            color={theme.palette.warning.main}\n                            footerData={decsDelta}\n                            iconPrimary={SentimentVeryDissatisfiedTwoToneIcon}\n                            iconFooter={arrowDecs}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={8} xs={12}>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12} sm={6}>\n                                <Grid container spacing={gridSpacing} direction=\"column\">\n                                    <Grid item xs={12}>\n                                        <VaccinatedLineCard\n                                            chartData={VaccinatedLineData}\n                                            title=\"Vaccine Dose Administrated\"\n                                            vaccinedose={numDifferentiation(dataTotal.vaccinated)}\n                                            footerData={[\n                                                {\n                                                    value: numDifferentiation(dataTotal.firstdosevaccinated),\n                                                    label: 'First Dose',\n                                                },\n                                                {\n                                                    value: numDifferentiation(dataTotal.seconddosevaccinated),\n                                                    label: 'Second Dose',\n                                                },\n                                            ]}\n                                        />\n                                    </Grid>\n                                    <Hidden only=\"sm\">\n                                        <Grid item xs={12}>\n                                            <Card>\n                                                <CardContent className={classes.flatcardbody}>\n                                                    <Grid container alignItems=\"center\" spacing={0}>\n                                                        <Grid item sm={6} xs={12} className={classes.flatcardblock}>\n                                                            <Grid container alignItems=\"center\" spacing={1}>\n                                                                <Grid item>\n                                                                    <Typography variant=\"subtitle2\" align=\"left\">\n                                                                        vaccinated\n                                                                    </Typography>\n                                                                </Grid>\n                                                                <Grid item sm zeroMinWidth>\n                                                                    <Typography variant=\"h5\" className={classes.texterror} align=\"right\">\n                                                                        {vaccinatedRatio}%\n                                                                    </Typography>\n                                                                </Grid>\n                                                            </Grid>\n                                                        </Grid>\n                                                        <Grid item sm={6} xs={12} className={classes.flatcardblock}>\n                                                            <Grid container alignItems=\"center\" spacing={1}>\n                                                                <Grid item>\n                                                                    <Typography variant=\"subtitle2\" align=\"left\">\n                                                                        Recovery\n                                                                    </Typography>\n                                                                </Grid>\n                                                                <Grid item sm zeroMinWidth>\n                                                                    <Typography variant=\"h5\" className={classes.textsuccess} align=\"right\">\n                                                                        {recoveredRatio}%\n                                                                    </Typography>\n                                                                </Grid>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </Grid>\n                                                </CardContent>\n                                            </Card>\n                                        </Grid>\n                                    </Hidden>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <VaccineByAgeCard chartData={chartAgeData} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item lg={4} xs={12}>\n                        <Card>\n                            <CardHeader\n                                title={\n                                    <Typography component=\"div\" className=\"card-header\">\n                                        Total Ratios\n                                    </Typography>\n                                }\n                            />\n                            <Divider />\n                            <CardContent>\n                                <Grid container spacing={gridSpacing}>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Test Positivity Ratio</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    {positivityRatio}%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={parseInt(positivityRatio)} color=\"primary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Active Ratio</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    {activeRatio}%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={parseInt(activeRatio)} color=\"secondary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Recovery Ratio</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    {recoveredRatio}%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={parseInt(recoveredRatio)} color=\"primary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Case Fatality Ratio</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    {fatalityRatio}%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={parseInt(fatalityRatio)} color=\"secondary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Vaccinated Ratio</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    {vaccinatedRatio}%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={parseInt(vaccinatedRatio)} color=\"primary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <StateWiseDataCard title=\"State-wise Data\" />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}