{"version":3,"sources":["views/Dashboard/VaccinatedLineCard.js","views/Dashboard/chart/sale-chart-1.js","views/Dashboard/RevenuChartCard.js","views/Dashboard/chart/revenu-chart.js","views/Dashboard/CovidDataCard/index.js","views/Dashboard/StateWiseDataCard/index.js","views/Dashboard/index.js"],"names":["useStyles","makeStyles","theme","content","padding","paddingBottom","SalesLineCard","props","footerHtml","classes","useTheme","bgColor","chartData","footerData","title","vaccinedose","map","item","index","Grid","key","Box","mt","mb","p","container","direction","spacing","alignItems","Typography","variant","value","color","label","Card","CardContent","className","bgcolor","palette","primary","main","justify","type","height","options","chart","sparkline","enabled","dataLabels","colors","stroke","curve","width","yaxis","min","max","tooltip","fixed","x","show","y","formatter","seriesName","marker","series","name","data","RevenuChartCard","matchDownMd","useMediaQuery","breakpoints","down","matchDownXs","CardHeader","t","Divider","xs","sm","md","Hidden","only","style","success","warning","labels","legend","position","fontFamily","itemMargin","horizontal","vertical","error","info","secondary","marginTop","footer","textAlign","paddingLeft","paddingRight","common","white","flexDirection","up","primaryIcon","marginBottom","CovidDataCard","iconPrimary","iconFooter","IconPrimary","fontSize","IconFooter","footerIcon","primaryData","lg","background","DATA_URL","DATA_API_ROOT","table","minWidth","row","celllg","display","cellsm","confirmed","recovered","deceased","StateWiseDataCard","useState","dataTable","setTable","useEffect","fetch","then","response","json","gridSpacing","component","TableContainer","Table","size","aria-label","TableHead","TableRow","TableCell","TableBody","Object","keys","STATE_NAMES","parseInt","total","toLocaleString","checkNumber","delta","numDifferentiation","tested","vaccinated","meta","population","CardActions","Button","arrowicon","verticalAlign","flatcardbody","flatcardblock","borderLeft","default","borderBottom","textsuccess","texterror","Default","dataTotal","setTotal","dataDelta","setDelta","dataMeta","setMeta","TT","conf","recv","decs","actv","confDelta","recvDelta","decsDelta","actvDelta","positivityRatio","toFixed","activeRatio","recoveredRatio","fatalityRatio","vaccinatedRatio","seconddosevaccinated","HotelTwoToneIcon","TrendingDownIcon","HowToRegTwoToneIcon","TrendingUpIcon","FavoriteTwoToneIcon","SentimentVeryDissatisfiedTwoToneIcon","VaccinatedLineCard","VaccinatedLineData","firstdosevaccinated","align","zeroMinWidth","RevenuChartCardData","LinearProgress"],"mappings":"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","file":"static/js/11.061ad160.chunk.js","sourcesContent":["import React from 'react';\nimport { useTheme } from '@material-ui/styles';\nimport Chart from 'react-apexcharts';\n\nimport { Box, Card, CardContent, Grid, makeStyles, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        padding: 0,\n        paddingBottom: '0 !important',\n    },\n}));\n\nconst SalesLineCard = (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const { bgColor, chartData, footerData, title, vaccinedose } = props;\n\n    let footerHtml;\n    if (footerData) {\n        footerHtml = footerData.map((item, index) => {\n            return (\n                <Grid item key={index}>\n                    <Box mt={3} mb={3} p={1}>\n                        <Grid container direction=\"column\" spacing={1} alignItems=\"center\">\n                            <Typography variant=\"h4\">{item.value}</Typography>\n                            <Typography variant=\"subtitle2\" color=\"secondary\">\n                                {item.label}\n                            </Typography>\n                        </Grid>\n                    </Box>\n                </Grid>\n            );\n        });\n    }\n\n    return (\n        <Card>\n            <CardContent className={classes.content}>\n                <Box color=\"#fff\" bgcolor={bgColor ? bgColor : theme.palette.primary.main} p={3}>\n                    <Grid container direction=\"column\" spacing={1}>\n                        <Grid item container justify=\"space-between\" alignItems=\"center\">\n                            {title && (\n                                <Grid item>\n                                    <Typography variant=\"subtitle1\" color=\"inherit\">\n                                        {title}\n                                    </Typography>\n                                </Grid>\n                            )}\n                            <Grid item>\n                                <Grid container alignItems=\"center\">\n                                    {vaccinedose && (\n                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                            {vaccinedose}\n                                        </Typography>\n                                    )}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        {chartData && (\n                            <Grid item>\n                                <Chart {...chartData} />\n                            </Grid>\n                        )}\n                    </Grid>\n                </Box>\n                {footerData && (\n                    <Grid container justify=\"space-around\" alignItems=\"center\">\n                        {footerHtml}\n                    </Grid>\n                )}\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default SalesLineCard;\n","const chartData = {\n    type: 'line',\n    height: 115,\n    options: {\n        chart: {\n            sparkline: {\n                enabled: true,\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        colors: ['#fff'],\n\n        stroke: {\n            curve: 'smooth',\n            width: 3,\n        },\n        yaxis: {\n            min: 20,\n            max: 100,\n        },\n        tooltip: {\n            theme: 'dark',\n            fixed: {\n                enabled: false,\n            },\n            x: {\n                show: false,\n            },\n            y: {\n                title: {\n                    formatter: (seriesName) => 'Sales/Order Per Day',\n                },\n            },\n            marker: {\n                show: false,\n            },\n        },\n    },\n    series: [\n        {\n            name: 'series1',\n            data: [55, 35, 75, 25, 90, 50],\n        },\n    ],\n};\n\nexport default chartData;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { useTheme } from '@material-ui/styles';\nimport { Box, Card, CardContent, CardHeader, Divider, Hidden, Grid, Typography, useMediaQuery } from '@material-ui/core';\n\nconst RevenuChartCard = (props) => {\n    const theme = useTheme();\n    const matchDownMd = useMediaQuery(theme.breakpoints.down('sm'));\n    const matchDownXs = useMediaQuery(theme.breakpoints.down('xs'));\n    const { chartData } = props;\n\n    return (\n        <Card>\n            <CardHeader\n                title={\n                    <Typography t=\"div\" className=\"card-header\">\n                        Total Revenue\n                    </Typography>\n                }\n            />\n            <Divider />\n            <CardContent>\n                <Grid container spacing={2} direction={matchDownMd && !matchDownXs ? 'row' : 'column'}>\n                    <Grid item xs={12} sm={7} md={12}>\n                        <Chart {...chartData} />\n                    </Grid>\n                    <Hidden only=\"sm\">\n                        <Grid item>\n                            <Divider />\n                        </Grid>\n                    </Hidden>\n                    <Grid\n                        item\n                        container\n                        direction={matchDownMd && !matchDownXs ? 'column' : 'row'}\n                        justify=\"space-around\"\n                        alignItems=\"center\"\n                        xs={12}\n                        sm={5}\n                        md={12}\n                    >\n                        <Grid item>\n                            <Grid container direction=\"column\">\n                                <Typography variant=\"h6\">Youtube</Typography>\n                                <Typography variant=\"subtitle1\" style={{ color: theme.palette.primary.main }}>\n                                    + 16.85%\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Grid container direction=\"column\">\n                                <Typography variant=\"h6\">Facebook</Typography>\n                                <Box color={theme.palette.success.main}>\n                                    <Typography variant=\"subtitle1\" color=\"inherit\">\n                                        +45.36%\n                                    </Typography>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Grid container direction=\"column\">\n                                <Typography variant=\"h6\">Twitter</Typography>\n                                <Typography variant=\"subtitle1\" style={{ color: theme.palette.warning.main }}>\n                                    - 50.69%\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default RevenuChartCard;\n","import value from '../../../assets/scss/_themes-vars.scss';\n\nexport default {\n    height: 228,\n    type: 'donut',\n    options: {\n        dataLabels: {\n            enabled: false,\n        },\n        labels: ['Youtube', 'Facebook', 'Twittr'],\n        legend: {\n            show: true,\n            position: 'bottom',\n            fontFamily: 'inherit',\n            labels: {\n                colors: 'inherit',\n            },\n        },\n        itemMargin: {\n            horizontal: 10,\n            vertical: 10,\n        },\n        colors: [value.error, value.primary, value.info],\n    },\n    series: [1258, 975, 500],\n};\n","import React from 'react';\n\nimport { makeStyles, Card, CardContent, Grid, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    secondary: {\n        marginTop: '.5rem',\n    },\n    footer: {\n        textAlign: 'center',\n        padding: theme.spacing(1.2),\n        paddingLeft: '20px',\n        paddingRight: '20px',\n        color: theme.palette.common.white,\n    },\n    container: {\n        [theme.breakpoints.down('sm')]: {\n            flexDirection: 'column-reverse',\n        },\n        [theme.breakpoints.up('sm')]: {\n            alignItems: 'center',\n        }\n    },\n    primaryIcon: {\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '.5rem',\n        }\n    }\n}));\n\nconst CovidDataCard = (props) => {\n    const { primary, secondary, iconPrimary, color, footerData, iconFooter } = props;\n    const classes = useStyles();\n\n    const IconPrimary = iconPrimary;\n    const primaryIcon = iconPrimary ? <IconPrimary fontSize=\"large\" /> : null;\n\n    const IconFooter = iconFooter;\n    const footerIcon = iconFooter ? <IconFooter /> : null;\n    const primaryData = primary ? primary : 0;\n\n    return (\n        <Card>\n            <CardContent>\n                <Grid container justify=\"space-between\" className={classes.container}>\n                    <Grid item lg={6} sm={6} xs={12}>\n                        <Typography variant=\"h3\" style={{ color: color }}>\n                            {primaryData}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" className={classes.secondary}>\n                            {secondary}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"h2\" style={{ color: color }} className={classes.primaryIcon}>\n                            {primaryIcon}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <div style={{ background: color }}>\n                <Grid container justify=\"space-between\" className={classes.footer}>\n                    <Grid item>\n                        <Typography variant=\"body2\">{footerData}</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"body2\">{footerIcon}</Typography>\n                    </Grid>\n                </Grid>\n            </div>\n        </Card>\n    );\n};\n\nexport default CovidDataCard;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n    Card,\n    CardHeader,\n    Divider,\n    Grid,\n    CardContent,\n    CardActions,\n    Typography,\n    Button,\n} from '@material-ui/core';\n\nimport { DATA_API_ROOT, gridSpacing, STATE_NAMES, numDifferentiation, checkNumber } from '../../../store/constant';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst DATA_URL = `${DATA_API_ROOT}/data.min.json`;\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        minWidth: 350,\n    },\n    row: {\n        padding: '1rem',\n        paddingLeft: '1.5rem',\n        paddingRight: '1.5rem',\n    },\n    celllg: {\n        padding: '1rem',\n        paddingLeft: '1.5rem',\n        paddingRight: '1.5rem',\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n    cellsm: {\n        padding: '1rem',\n        paddingLeft: '1.5rem',\n        paddingRight: '1.5rem',\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    confirmed: {\n        color: theme.palette.error.main,\n        fontSize: 12,\n    },\n    recovered: {\n        color: theme.palette.success.main,\n        fontSize: 12,\n    },\n    deceased: {\n        color: theme.palette.warning.main,\n        fontSize: 12,\n    },\n}));\n\nexport default function StateWiseDataCard() {\n    const classes = useStyles();\n\n    const [dataTable, setTable] = useState([]);\n\n    const getData = () => {\n        fetch(DATA_URL)\n          .then((response) => {\n            return response.json();\n          })\n          .then((json) => {\n            setTable(json);\n          });\n      }\n      \n    useEffect(() => {\n        getData();\n    }, []);\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Card>\n                    <CardHeader\n                        title={\n                            <Typography component=\"div\" className=\"card-header\">\n                                State-wise Data\n                            </Typography>\n                        }\n                    />\n                    <Divider />\n                    <CardContent className=\"p-0\">\n                        <TableContainer>\n                            <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell className={classes.row}>State</TableCell>\n                                        <TableCell>Confirmed</TableCell>\n                                        <TableCell>Active</TableCell>\n                                        <TableCell>Recovered</TableCell>\n                                        <TableCell>Deceased</TableCell>\n                                        <TableCell>Tested</TableCell>\n                                        <TableCell>Vaccinated</TableCell>\n                                        <TableCell>Population</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {Object.keys(dataTable).map((row, index) => (\n                                        <TableRow key={index}>\n                                            <TableCell className={classes.celllg}>{STATE_NAMES[row]}</TableCell>\n                                            <TableCell className={classes.cellsm}>{row}</TableCell>\n                                            <TableCell><div>{parseInt(dataTable[row].total.confirmed).toLocaleString('en-IN')}</div><div className={classes.confirmed}>{checkNumber(parseInt(dataTable[row].delta?.confirmed).toLocaleString('en-IN'))}</div></TableCell>\n                                            <TableCell>{(parseInt(dataTable[row].total.confirmed) - parseInt(dataTable[row].total.recovered) - parseInt(dataTable[row].total.deceased)).toLocaleString('en-IN')}</TableCell>\n                                            <TableCell><div>{parseInt(dataTable[row].total.recovered).toLocaleString('en-IN')}</div><div className={classes.recovered}>{checkNumber(parseInt(dataTable[row].delta?.recovered).toLocaleString('en-IN'))}</div></TableCell>\n                                            <TableCell><div>{parseInt(dataTable[row].total.deceased).toLocaleString('en-IN')}</div><div className={classes.deceased}>{checkNumber(parseInt(dataTable[row].delta?.deceased).toLocaleString('en-IN'))}</div></TableCell>\n                                            <TableCell>{numDifferentiation(parseInt(dataTable[row].total.tested))}</TableCell>\n                                            <TableCell>{numDifferentiation(parseInt(dataTable[row].total.vaccinated))}</TableCell>\n                                            <TableCell>{numDifferentiation(parseInt(dataTable[row].meta.population))}</TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </CardContent>\n                    <CardActions className=\"f-right\">\n                        <Button variant=\"text\" size=\"small\" color=\"primary\">\n                            View all States\n                        </Button>\n                    </CardActions>\n                </Card>\n            </Grid>\n        </Grid>\n    );\n}\n","import React from 'react';\nimport { makeStyles, Grid, Card, CardHeader, CardContent, Hidden, Typography, Divider, LinearProgress } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useState, useEffect } from 'react';\nimport HotelTwoToneIcon from '@material-ui/icons/HotelTwoTone';\nimport HowToRegTwoToneIcon from '@material-ui/icons/HowToRegTwoTone';\nimport FavoriteTwoToneIcon from '@material-ui/icons/FavoriteTwoTone';\nimport SentimentVeryDissatisfiedTwoToneIcon from '@material-ui/icons/SentimentVeryDissatisfiedTwoTone';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport TrendingDownIcon from '@material-ui/icons/TrendingDown';\n\nimport VaccinatedLineCard from './VaccinatedLineCard';\nimport VaccinatedLineData from './chart/sale-chart-1';\n\nimport RevenuChartCard from './RevenuChartCard';\nimport RevenuChartCardData from './chart/revenu-chart';\n\nimport CovidDataCard from './CovidDataCard';\nimport StateWiseDataCard from './StateWiseDataCard';\n\nimport { DATA_API_ROOT, gridSpacing, numDifferentiation } from './../../store/constant';\nconst DATA_URL = `${DATA_API_ROOT}/data.min.json`;\n\nconst useStyles = makeStyles((theme) => ({\n    arrowicon: {\n        '& svg': {\n            width: '20px',\n            height: '20px',\n            verticalAlign: 'top',\n        },\n    },\n    flatcardbody: {\n        padding: '0px !important',\n        '& svg': {\n            width: '40px',\n            height: '40px',\n        },\n    },\n    flatcardblock: {\n        padding: '25px 25px',\n        borderLeft: '1px solid' + theme.palette.background.default,\n        [theme.breakpoints.down('xs')]: {\n            borderLeft: 'none',\n            borderBottom: '1px solid' + theme.palette.background.default,\n        },\n        [theme.breakpoints.down('sm')]: {\n            borderBottom: '1px solid' + theme.palette.background.default,\n        },\n    },\n    textsuccess: {\n        color: theme.palette.success.main,\n    },\n    texterror: {\n        color: theme.palette.error.main,\n    },\n}));\n\nconst Default = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const [dataTotal, setTotal] = useState([]);\n    const [dataDelta, setDelta] = useState([]);\n    const [dataMeta, setMeta] = useState([]);\n\n    const getData = () => {\n        fetch(DATA_URL)\n          .then((response) => {\n            return response.json();\n          })\n          .then((json) => {\n            setTotal(json.TT.total);\n            setDelta(json.TT.delta);\n            setMeta(json.TT.meta);\n          });\n      }\n      \n    useEffect(() => {\n        getData();\n    }, []);\n\n    const conf = numDifferentiation(dataTotal.confirmed);\n    const recv = numDifferentiation(dataTotal.recovered);\n    const decs = numDifferentiation(dataTotal.deceased);\n    const actv = numDifferentiation(dataTotal.confirmed - dataTotal.recovered - dataTotal.deceased);\n    const confDelta = parseInt(dataDelta.confirmed).toLocaleString('en-IN');\n    const recvDelta = parseInt(dataDelta.recovered).toLocaleString('en-IN');\n    const decsDelta = parseInt(dataDelta.deceased).toLocaleString('en-IN');\n    const actvDelta = parseInt(dataDelta.confirmed - dataDelta.recovered - dataDelta.deceased).toLocaleString('en-IN');\n    const positivityRatio = ((dataTotal.confirmed / dataTotal.tested)*100).toFixed(2);\n    const activeRatio = (((dataTotal.confirmed - dataTotal.recovered - dataTotal.deceased) / dataTotal.confirmed)*100).toFixed(2);\n    const recoveredRatio = ((dataTotal.recovered / dataTotal.confirmed)*100).toFixed(2);\n    const fatalityRatio = ((dataTotal.deceased / dataTotal.confirmed)*100).toFixed(2);\n    const vaccinatedRatio = ((dataTotal.seconddosevaccinated / dataMeta.population)*100).toFixed(2)\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={3} sm={6} xs={6}>\n                        <CovidDataCard\n                            primary={conf}\n                            secondary=\"Confirmed\"\n                            color={theme.palette.error.main}\n                            footerData={confDelta}\n                            iconPrimary={HotelTwoToneIcon}\n                            iconFooter={TrendingDownIcon}\n                        />\n                    </Grid>\n                    <Grid item lg={3} sm={6} xs={6}>\n                        <CovidDataCard\n                            primary={actv}\n                            secondary=\"Active\"\n                            color={theme.palette.primary.main}\n                            footerData={actvDelta}\n                            iconPrimary={HowToRegTwoToneIcon}\n                            iconFooter={TrendingUpIcon}\n                        />\n                    </Grid>\n                    <Grid item lg={3} sm={6} xs={6}>\n                        <CovidDataCard\n                            primary={recv}\n                            secondary=\"Recovered\"\n                            color={theme.palette.success.main}\n                            footerData={recvDelta}\n                            iconPrimary={FavoriteTwoToneIcon}\n                            iconFooter={TrendingUpIcon}\n                        />\n                    </Grid>\n                    <Grid item lg={3} sm={6} xs={6}>\n                        <CovidDataCard\n                            primary={decs}\n                            secondary=\"Deceased\"\n                            color={theme.palette.warning.main}\n                            footerData={decsDelta}\n                            iconPrimary={SentimentVeryDissatisfiedTwoToneIcon}\n                            iconFooter={TrendingUpIcon}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={8} xs={12}>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12} sm={6}>\n                                <Grid container spacing={gridSpacing} direction=\"column\">\n                                    <Grid item xs={12}>\n                                        <VaccinatedLineCard\n                                            chartData={VaccinatedLineData}\n                                            title=\"Vaccine Dose Administrated\"\n                                            vaccinedose={numDifferentiation(dataTotal.vaccinated)}\n                                            footerData={[\n                                                {\n                                                    value: numDifferentiation(dataTotal.firstdosevaccinated),\n                                                    label: 'First Dose',\n                                                },\n                                                {\n                                                    value: numDifferentiation(dataTotal.seconddosevaccinated),\n                                                    label: 'Second Dose',\n                                                },\n                                            ]}\n                                        />\n                                    </Grid>\n                                    <Hidden only=\"sm\">\n                                        <Grid item xs={12}>\n                                            <Card>\n                                                <CardContent className={classes.flatcardbody}>\n                                                    <Grid container alignItems=\"center\" spacing={0}>\n                                                        <Grid item sm={6} xs={12} className={classes.flatcardblock}>\n                                                            <Grid container alignItems=\"center\" spacing={1}>\n                                                                <Grid item>\n                                                                    <Typography variant=\"subtitle2\" align=\"left\">\n                                                                        vaccinated\n                                                                    </Typography>\n                                                                </Grid>\n                                                                <Grid item sm zeroMinWidth>\n                                                                    <Typography variant=\"h5\" className={classes.texterror} align=\"right\">\n                                                                        {vaccinatedRatio}%\n                                                                    </Typography>\n                                                                </Grid>\n                                                            </Grid>\n                                                        </Grid>\n                                                        <Grid item sm={6} xs={12} className={classes.flatcardblock}>\n                                                            <Grid container alignItems=\"center\" spacing={1}>\n                                                                <Grid item>\n                                                                    <Typography variant=\"subtitle2\" align=\"left\">\n                                                                        Recovery\n                                                                    </Typography>\n                                                                </Grid>\n                                                                <Grid item sm zeroMinWidth>\n                                                                    <Typography variant=\"h5\" className={classes.textsuccess} align=\"right\">\n                                                                        {recoveredRatio}%\n                                                                    </Typography>\n                                                                </Grid>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </Grid>\n                                                </CardContent>\n                                            </Card>\n                                        </Grid>\n                                    </Hidden>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <RevenuChartCard chartData={RevenuChartCardData} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item lg={4} xs={12}>\n                        <Card>\n                            <CardHeader\n                                title={\n                                    <Typography component=\"div\" className=\"card-header\">\n                                        Total Ratios\n                                    </Typography>\n                                }\n                            />\n                            <Divider />\n                            <CardContent>\n                                <Grid container spacing={gridSpacing}>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Test Positivity Ratio</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    {positivityRatio}%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={parseInt(positivityRatio)} color=\"primary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Active Ratio</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    {activeRatio}%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={parseInt(activeRatio)} color=\"secondary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Recovery Ratio</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    {recoveredRatio}%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={parseInt(recoveredRatio)} color=\"primary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Case Fatality Ratio</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    {fatalityRatio}%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={parseInt(fatalityRatio)} color=\"secondary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Vaccinated Ratio</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    {vaccinatedRatio}%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={parseInt(vaccinatedRatio)} color=\"primary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <StateWiseDataCard title=\"State-wise Data\" />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Default;\n"],"sourceRoot":""}