{"version":3,"sources":["views/Dashboard/VaccinatedLineCard.js","views/Dashboard/VaccineByAgeCard.js","views/Dashboard/CovidDataCard/index.js","views/Dashboard/StateWiseDataCard/index.js","views/Dashboard/index.js"],"names":["DATA_URL","DATA_API_ROOT","useStyles","makeStyles","content","padding","paddingBottom","VaccinatedLineCard","classes","theme","useTheme","useState","dataData","setData","getData","a","fetch","then","response","json","TT","dates","useEffect","chartData","type","height","options","chart","sparkline","enabled","dataLabels","colors","stroke","curve","width","tooltip","fixed","marker","show","xaxis","categories","series","name","data","title","vaccinedose","footerData","value","label","undefined","length","Object","keys","map","date","index","array","i","total","vaccinated1","push","vaccinated2","Card","CardContent","className","Box","color","bgcolor","palette","primary","main","p","Grid","container","direction","spacing","item","justify","alignItems","Typography","variant","numDifferentiation","key","mt","mb","VaccineByAgeCard","matchDownMd","useMediaQuery","breakpoints","down","matchDownXs","dataVaccineByAge","setVaccineByAge","chartAgeData","labels","legend","position","fontFamily","itemMargin","horizontal","vertical","error","warning","vac_18_45","vac_45_60","above_60","VACCINE_API","vaccinationByAge","CardHeader","t","Divider","xs","sm","md","Hidden","only","style","secondary","marginTop","footer","textAlign","paddingLeft","paddingRight","common","white","flexDirection","up","primaryIcon","marginBottom","CovidDataCard","props","IconFooter","iconPrimary","iconFooter","IconPrimary","fontSize","TrendingUpIcon","TrendingDownIcon","footerIcon","primaryData","lg","background","table","minWidth","row","celllg","display","cellsm","confirmed","recovered","success","deceased","StateWiseDataCard","dataTable","setTable","gridSpacing","component","TableContainer","Table","size","aria-label","TableHead","TableRow","TableCell","TableBody","STATE_NAMES","checkNumber","delta","tested","meta","population","arrowicon","verticalAlign","flatcardbody","flatcardblock","borderLeft","default","borderBottom","textsuccess","texterror","Dashboard","conf","recv","decs","actv","confDelta","recvDelta","decsDelta","actvDelta","positivityRatio","activeRatio","recoveredRatio","fatalityRatio","vaccinated1Ratio","vaccinated2Ratio","arrowCnf","arrowAct","arrowRecv","arrowDecs","toFixed","HotelTwoToneIcon","HowToRegTwoToneIcon","FavoriteTwoToneIcon","SentimentVeryDissatisfiedTwoToneIcon","align","zeroMinWidth","LinearProgress","parseInt"],"mappings":"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","file":"static/js/5.b8e8a914.chunk.js","sourcesContent":["import React from 'react';\nimport { useTheme } from '@material-ui/styles';\nimport Chart from 'react-apexcharts';\nimport { DATA_API_ROOT, numDifferentiation } from './../../store/constant';\nimport { Box, Card, CardContent, Grid, makeStyles, Typography } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nconst DATA_URL = `${DATA_API_ROOT}/timeseries.min.json`;\n\nconst useStyles = makeStyles(() => ({\n    content: {\n        padding: 0,\n        paddingBottom: '0 !important',\n    },\n}));\n\nconst VaccinatedLineCard = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const [dataData, setData] = useState([]);\n\n    const getData = async () => {\n        await fetch(DATA_URL)\n          .then((response) => {\n            return response.json();\n          })\n          .then((json) => {\n            setData(json.TT.dates);\n          });\n    }\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    const chartData = {\n        type: 'line',\n        height: 115,\n        options: {\n            chart: {\n                sparkline: {\n                    enabled: true,\n                },\n            },\n            dataLabels: {\n                enabled: false,\n            },\n            colors: ['#fff'],\n            stroke: {\n                curve: 'smooth',\n                width: 3,\n            },\n            tooltip: {\n                theme: 'dark',\n                fixed: {\n                    enabled: false,\n                },\n                marker: {\n                    show: false,\n                }\n            },\n            xaxis: {\n                categories: []\n            }\n        },\n        series: [\n            {\n                name: 'First Dose',\n                data: [],\n            },\n            {\n                name: 'Second Dose',\n                data: [],\n            },\n        ]\n    };\n\n    const data = {\n        title: \"Vaccine Dose Administrated\",\n        vaccinedose: 0,\n        footerData: [\n            {\n                value: 0,\n                label: 'First Dose',\n            },\n            {\n                value: 0,\n                label: 'Second Dose',\n            },\n        ]\n    }\n\n    if(dataData.length === undefined) {\n        Object.keys(dataData).map((date, index, array) => {\n            for(let i=0; i<=100; i=i+10) {\n                if(array.length-i === index) {\n                    if(dataData[date].total.vaccinated1 !== undefined){\n                        chartData.series[0].data.push(dataData[date].total.vaccinated1);\n                        chartData.series[1].data.push(dataData[date].total.vaccinated2);\n                        chartData.options.xaxis.categories.push(date);\n                    }\n                }\n            }\n            if(array.length-1 === index) {\n                if(dataData[date].total.vaccinated1 !== undefined){\n                    data.footerData[0].value = dataData[date].total.vaccinated1;\n                    data.footerData[1].value = dataData[date].total.vaccinated2;\n                    data.vaccinedose = dataData[date].total.vaccinated1 + dataData[date].total.vaccinated2;\n                }\n            }\n            return null;\n        });\n    }\n    \n    return (\n        <Card>\n            <CardContent className={classes.content}>\n                <Box color=\"#fff\" bgcolor={theme.palette.primary.main} p={3}>\n                    <Grid container direction=\"column\" spacing={1}>\n                        <Grid item container justify=\"space-between\" alignItems=\"center\">\n                            {data.title && (\n                                <Grid item>\n                                    <Typography variant=\"subtitle1\" color=\"inherit\">\n                                        {data.title}\n                                    </Typography>\n                                </Grid>\n                            )}\n                            <Grid item>\n                                <Grid container alignItems=\"center\">\n                                    {data.vaccinedose && (\n                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                            {numDifferentiation(data.vaccinedose)}\n                                        </Typography>\n                                    )}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        {chartData && (\n                            <Grid item>\n                                <Chart {...chartData} />\n                            </Grid>\n                        )}\n                    </Grid>\n                </Box>\n                {data.footerData && (\n                    <Grid container justify=\"space-around\" alignItems=\"center\">\n                        {data.footerData.map((item, index) => (\n                            <Grid item key={index}>\n                                <Box mt={3} mb={3} p={1}>\n                                    <Grid container direction=\"column\" spacing={1} alignItems=\"center\">\n                                        <Typography variant=\"h4\">{numDifferentiation(item.value)}</Typography>\n                                        <Typography variant=\"subtitle2\" color=\"secondary\">\n                                            {item.label}\n                                        </Typography>\n                                    </Grid>\n                                </Box>\n                            </Grid>\n                        ))}\n                    </Grid>\n                )}\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default VaccinatedLineCard;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { useTheme } from '@material-ui/styles';\nimport { useState, useEffect } from 'react';\nimport value from '../../assets/scss/_themes-vars.scss';\nimport { Card, CardContent, CardHeader, Divider, Hidden, Grid, Typography, useMediaQuery } from '@material-ui/core';\n\nimport { VACCINE_API, numDifferentiation } from './../../store/constant';\n\nconst VaccineByAgeCard = () => {\n    const theme = useTheme();\n    const matchDownMd = useMediaQuery(theme.breakpoints.down('sm'));\n    const matchDownXs = useMediaQuery(theme.breakpoints.down('xs'));\n\n    const [dataVaccineByAge, setVaccineByAge] = useState([]);\n\n    const getVaccineByAge = () => {\n        fetch(VACCINE_API)\n          .then((response) => {\n            return response.json();\n          })\n          .then((json) => {\n            setVaccineByAge(json.vaccinationByAge);\n        });\n    }\n    \n    const chartAgeData = {\n        height: 225,\n        type: 'donut',\n        options: {\n            dataLabels: {\n                enabled: false,\n            },\n            labels: ['18 - 45', '45 - 60', 'Above 60'],\n            legend: {\n                show: true,\n                position: 'bottom',\n                fontFamily: 'inherit',\n                labels: {\n                    colors: 'inherit',\n                    fontFamily: 'inherit',\n                },\n            },\n            itemMargin: {\n                horizontal: 10,\n                vertical: 10,\n            },\n            colors: [value.error, value.primary, value.warning],\n        },\n        series: [0, 0, 0],\n    }\n\n    if(dataVaccineByAge.length === undefined) {\n        chartAgeData.series = [dataVaccineByAge.vac_18_45, dataVaccineByAge.vac_45_60, dataVaccineByAge.above_60];\n    }\n\n    useEffect(() => {\n        getVaccineByAge();\n    }, []);\n\n    return (\n        <Card>\n            <CardHeader\n                title={\n                    <Typography t=\"div\" className=\"card-header\">\n                        Vaccination By Age\n                    </Typography>\n                }\n            />\n            <Divider />\n            <CardContent>\n                <Grid container spacing={2} direction={matchDownMd && !matchDownXs ? 'row' : 'column'}>\n                    <Grid item xs={12} sm={7} md={12}>\n                        <Chart {...chartAgeData} />\n                    </Grid>\n                    <Hidden only=\"sm\">\n                        <Grid item>\n                            <Divider />\n                        </Grid>\n                    </Hidden>\n                    <Grid\n                        item\n                        container\n                        direction={matchDownMd && !matchDownXs ? 'column' : 'row'}\n                        justify=\"space-around\"\n                        alignItems=\"center\"\n                        xs={12}\n                        sm={5}\n                        md={12}\n                    >\n                        <Grid item>\n                            <Grid container direction=\"column\" alignItems=\"center\">\n                                <Typography variant=\"h6\">18 - 45</Typography>\n                                <Typography variant=\"subtitle1\" style={{ color: theme.palette.error.main }}>\n                                    {numDifferentiation(dataVaccineByAge.vac_18_45)}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Grid container direction=\"column\" alignItems=\"center\">\n                                <Typography variant=\"h6\">45 - 60</Typography>\n                                <Typography variant=\"subtitle1\" style={{ color: theme.palette.primary.main }}>\n                                        {numDifferentiation(dataVaccineByAge.vac_45_60)}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Grid container direction=\"column\" alignItems=\"center\">\n                                <Typography variant=\"h6\">Above 60</Typography>\n                                <Typography variant=\"subtitle1\" style={{ color: theme.palette.warning.main }}>\n                                    {numDifferentiation(dataVaccineByAge.above_60)}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default VaccineByAgeCard;\n","import React from 'react';\n\nimport { makeStyles, Card, CardContent, Grid, Typography } from '@material-ui/core';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport TrendingDownIcon from '@material-ui/icons/TrendingDown';\n\nconst useStyles = makeStyles((theme) => ({\n    secondary: {\n        marginTop: '.5rem',\n    },\n    footer: {\n        textAlign: 'center',\n        padding: theme.spacing(1.2),\n        paddingLeft: '20px',\n        paddingRight: '20px',\n        color: theme.palette.common.white,\n    },\n    container: {\n        [theme.breakpoints.down('sm')]: {\n            flexDirection: 'column-reverse',\n        },\n        [theme.breakpoints.up('sm')]: {\n            alignItems: 'center',\n        }\n    },\n    primaryIcon: {\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '.5rem',\n        }\n    }\n}));\n\nconst CovidDataCard = (props) => {\n    const { primary, secondary, iconPrimary, color, footerData, iconFooter } = props;\n    const classes = useStyles();\n\n    const IconPrimary = iconPrimary;\n    const primaryIcon = iconPrimary ? <IconPrimary fontSize=\"large\" /> : null;\n\n    let IconFooter;\n    if(iconFooter === 1) {\n        IconFooter = TrendingUpIcon;\n    }\n    if(iconFooter === 2) {\n        IconFooter = TrendingDownIcon;\n    }\n    const footerIcon = IconFooter ? <IconFooter /> : null;\n    const primaryData = primary ? primary : 0;\n\n    return (\n        <Card>\n            <CardContent>\n                <Grid container justify=\"space-between\" className={classes.container}>\n                    <Grid item lg={6} sm={6} xs={12}>\n                        <Typography variant=\"h3\" style={{ color: color }}>\n                            {primaryData}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" className={classes.secondary}>\n                            {secondary}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"h2\" style={{ color: color }} className={classes.primaryIcon}>\n                            {primaryIcon}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <div style={{ background: color }}>\n                <Grid container justify=\"space-between\" className={classes.footer}>\n                    <Grid item>\n                        <Typography variant=\"body2\">{footerData}</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"body2\">{footerIcon}</Typography>\n                    </Grid>\n                </Grid>\n            </div>\n        </Card>\n    );\n};\n\nexport default CovidDataCard;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n    Card,\n    CardHeader,\n    Divider,\n    Grid,\n    CardContent,\n    Typography\n} from '@material-ui/core';\n\nimport { DATA_API_ROOT, gridSpacing, STATE_NAMES, numDifferentiation, checkNumber } from '../../../store/constant';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst DATA_URL = `${DATA_API_ROOT}/data.min.json`;\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        minWidth: 350,\n    },\n    row: {\n        padding: '1rem',\n        paddingLeft: '1.5rem',\n        paddingRight: '1.5rem',\n    },\n    celllg: {\n        padding: '1rem',\n        paddingLeft: '1.5rem',\n        paddingRight: '1.5rem',\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n    cellsm: {\n        padding: '1rem',\n        paddingLeft: '1.5rem',\n        paddingRight: '1.5rem',\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    confirmed: {\n        color: theme.palette.error.main,\n        fontSize: 12,\n    },\n    recovered: {\n        color: theme.palette.success.main,\n        fontSize: 12,\n    },\n    deceased: {\n        color: theme.palette.warning.main,\n        fontSize: 12,\n    },\n}));\n\nexport default function StateWiseDataCard() {\n    const classes = useStyles();\n\n    const [dataTable, setTable] = useState([]);\n\n    const getData = async () => {\n        await fetch(DATA_URL)\n          .then((response) => {\n            return response.json();\n          })\n          .then((json) => {\n            setTable(json);\n          });\n      }\n      \n    useEffect(() => {\n        getData();\n    }, []);\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Card>\n                    <CardHeader\n                        title={\n                            <Typography component=\"div\" className=\"card-header\">\n                                State-wise Data\n                            </Typography>\n                        }\n                    />\n                    <Divider />\n                    <CardContent className=\"p-0\">\n                        <TableContainer>\n                            <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell className={classes.row}>State</TableCell>\n                                        <TableCell>Confirmed</TableCell>\n                                        <TableCell>Active</TableCell>\n                                        <TableCell>Recovered</TableCell>\n                                        <TableCell>Deceased</TableCell>\n                                        <TableCell>Tested</TableCell>\n                                        <TableCell>First Dose</TableCell>\n                                        <TableCell>Second Dose</TableCell>\n                                        <TableCell>Population</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {Object.keys(dataTable).map((row, index) => (\n                                        <TableRow key={index}>\n                                            <TableCell className={classes.celllg}>{STATE_NAMES[row]}</TableCell>\n                                            <TableCell className={classes.cellsm}>{row}</TableCell>\n                                            <TableCell><div>{numDifferentiation(dataTable[row].total.confirmed)}</div><div className={classes.confirmed}>{checkNumber(numDifferentiation(dataTable[row].delta?.confirmed))}</div></TableCell>\n                                            <TableCell>{numDifferentiation(dataTable[row].total.confirmed - dataTable[row].total.recovered - dataTable[row].total.deceased)}</TableCell>\n                                            <TableCell><div>{numDifferentiation(dataTable[row].total.recovered)}</div><div className={classes.recovered}>{checkNumber(numDifferentiation(dataTable[row].delta?.recovered))}</div></TableCell>\n                                            <TableCell><div>{numDifferentiation(dataTable[row].total.deceased)}</div><div className={classes.deceased}>{checkNumber(numDifferentiation(dataTable[row].delta?.deceased))}</div></TableCell>\n                                            <TableCell>{numDifferentiation(dataTable[row].total.tested)}</TableCell>\n                                            <TableCell>{numDifferentiation(dataTable[row].total.vaccinated1)}</TableCell>\n                                            <TableCell>{numDifferentiation(dataTable[row].total.vaccinated2)}</TableCell>\n                                            <TableCell>{numDifferentiation(dataTable[row].meta.population)}</TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n    );\n}\n","import React from 'react';\nimport { makeStyles, Grid, Card, CardHeader, CardContent, Hidden, Typography, Divider, LinearProgress } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useState, useEffect } from 'react';\nimport HotelTwoToneIcon from '@material-ui/icons/HotelTwoTone';\nimport HowToRegTwoToneIcon from '@material-ui/icons/HowToRegTwoTone';\nimport FavoriteTwoToneIcon from '@material-ui/icons/FavoriteTwoTone';\nimport SentimentVeryDissatisfiedTwoToneIcon from '@material-ui/icons/SentimentVeryDissatisfiedTwoTone';\nimport VaccinatedLineCard from './VaccinatedLineCard';\nimport VaccineByAgeCard from './VaccineByAgeCard';\nimport CovidDataCard from './CovidDataCard';\nimport StateWiseDataCard from './StateWiseDataCard';\n\nimport { DATA_API_ROOT, gridSpacing, numDifferentiation } from './../../store/constant';\nconst DATA_URL = `${DATA_API_ROOT}/data.min.json`;\n\nconst useStyles = makeStyles((theme) => ({\n    arrowicon: {\n        '& svg': {\n            width: '20px',\n            height: '20px',\n            verticalAlign: 'top',\n        },\n    },\n    flatcardbody: {\n        padding: '0px !important',\n        '& svg': {\n            width: '40px',\n            height: '40px',\n        },\n    },\n    flatcardblock: {\n        padding: '25px 25px',\n        borderLeft: '1px solid' + theme.palette.background.default,\n        [theme.breakpoints.down('xs')]: {\n            borderLeft: 'none',\n            borderBottom: '1px solid' + theme.palette.background.default,\n        },\n        [theme.breakpoints.down('sm')]: {\n            borderBottom: '1px solid' + theme.palette.background.default,\n        },\n    },\n    textsuccess: {\n        color: theme.palette.success.main,\n    },\n    texterror: {\n        color: theme.palette.error.main,\n    },\n}));\n\nconst Dashboard = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const [dataData, setData] = useState([]);\n\n    const getData = async () => {\n        await fetch(DATA_URL)\n          .then((response) => {\n            return response.json();\n          })\n          .then((json) => {\n            setData(json.TT);\n          });\n    }\n    \n    useEffect(() => {\n        getData();\n    }, []);\n\n    let conf = 0, recv = 0, decs = 0, actv = 0, confDelta = 0, recvDelta = 0, decsDelta = 0, actvDelta = 0, positivityRatio = 0, activeRatio = 0, recoveredRatio = 0, fatalityRatio = 0, vaccinated1Ratio = 0, vaccinated2Ratio=0;\n    let arrowCnf=0, arrowAct=0, arrowRecv=0, arrowDecs=0;\n    if(dataData.length === undefined) {\n        conf = numDifferentiation(dataData.total.confirmed);\n        recv = numDifferentiation(dataData.total.recovered);\n        decs = numDifferentiation(dataData.total.deceased);\n        actv = numDifferentiation(dataData.total.confirmed - dataData.total.recovered - dataData.total.deceased);\n        confDelta = numDifferentiation(dataData.delta.confirmed);\n        recvDelta = numDifferentiation(dataData.delta.recovered);\n        decsDelta = numDifferentiation(dataData.delta.deceased);\n        actvDelta = numDifferentiation(dataData.delta.confirmed - dataData.delta.recovered - dataData.delta.deceased);\n        positivityRatio = ((dataData.total.confirmed / dataData.total.tested)*100).toFixed(2);\n        activeRatio = (((dataData.total.confirmed - dataData.total.recovered - dataData.total.deceased) / dataData.total.confirmed)*100).toFixed(2);\n        recoveredRatio = ((dataData.total.recovered / dataData.total.confirmed)*100).toFixed(2);\n        fatalityRatio = ((dataData.total.deceased / dataData.total.confirmed)*100).toFixed(2);\n        vaccinated1Ratio = ((dataData.total.vaccinated1 / dataData.meta.population)*100).toFixed(2);\n        vaccinated2Ratio = ((dataData.total.vaccinated2 / dataData.meta.population)*100).toFixed(2);\n\n        if(dataData.delta.confirmed > 0) { arrowCnf = 1 } else { arrowCnf = 2 }\n        if(dataData.delta.confirmed - dataData.delta.recovered - dataData.delta.deceased > 0) { arrowAct = 1 } else { arrowAct = 2 }\n        if(dataData.delta.recovered > 0) { arrowRecv = 1 } else { arrowRecv = 2 }\n        if(dataData.delta.deceased > 0) { arrowDecs = 1 } else { arrowDecs = 2 }\n    }\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={3} sm={6} xs={6}>\n                        <CovidDataCard\n                            primary={conf}\n                            secondary=\"Confirmed\"\n                            color={theme.palette.error.main}\n                            footerData={confDelta}\n                            iconPrimary={HotelTwoToneIcon}\n                            iconFooter={arrowCnf}\n                        />\n                    </Grid>\n                    <Grid item lg={3} sm={6} xs={6}>\n                        <CovidDataCard\n                            primary={actv}\n                            secondary=\"Active\"\n                            color={theme.palette.primary.main}\n                            footerData={actvDelta}\n                            iconPrimary={HowToRegTwoToneIcon}\n                            iconFooter={arrowAct}\n                        />\n                    </Grid>\n                    <Grid item lg={3} sm={6} xs={6}>\n                        <CovidDataCard\n                            primary={recv}\n                            secondary=\"Recovered\"\n                            color={theme.palette.success.main}\n                            footerData={recvDelta}\n                            iconPrimary={FavoriteTwoToneIcon}\n                            iconFooter={arrowRecv}\n                        />\n                    </Grid>\n                    <Grid item lg={3} sm={6} xs={6}>\n                        <CovidDataCard\n                            primary={decs}\n                            secondary=\"Deceased\"\n                            color={theme.palette.warning.main}\n                            footerData={decsDelta}\n                            iconPrimary={SentimentVeryDissatisfiedTwoToneIcon}\n                            iconFooter={arrowDecs}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={8} xs={12}>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12} sm={6}>\n                                <Grid container spacing={gridSpacing} direction=\"column\">\n                                    <Grid item xs={12}>\n                                        <VaccinatedLineCard title=\"Vaccine Dose Administrated\"/>\n                                    </Grid>\n                                    <Hidden only=\"sm\">\n                                        <Grid item xs={12}>\n                                            <Card>\n                                                <CardContent className={classes.flatcardbody}>\n                                                    <Grid container alignItems=\"center\" spacing={0}>\n                                                        <Grid item sm={6} xs={12} className={classes.flatcardblock}>\n                                                            <Grid container alignItems=\"center\" spacing={1}>\n                                                                <Grid item>\n                                                                    <Typography variant=\"subtitle2\" align=\"left\">\n                                                                        First dose\n                                                                    </Typography>\n                                                                </Grid>\n                                                                <Grid item sm zeroMinWidth>\n                                                                    <Typography variant=\"h5\" className={classes.texterror} align=\"right\">\n                                                                        {vaccinated1Ratio}%\n                                                                    </Typography>\n                                                                </Grid>\n                                                            </Grid>\n                                                        </Grid>\n                                                        <Grid item sm={6} xs={12} className={classes.flatcardblock}>\n                                                            <Grid container alignItems=\"center\" spacing={1}>\n                                                                <Grid item>\n                                                                    <Typography variant=\"subtitle2\" align=\"left\">\n                                                                        vaccinated\n                                                                    </Typography>\n                                                                </Grid>\n                                                                <Grid item sm zeroMinWidth>\n                                                                    <Typography variant=\"h5\" className={classes.textsuccess} align=\"right\">\n                                                                        {vaccinated2Ratio}%\n                                                                    </Typography>\n                                                                </Grid>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </Grid>\n                                                </CardContent>\n                                            </Card>\n                                        </Grid>\n                                    </Hidden>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <VaccineByAgeCard title=\"Vaccination By Age\" />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item lg={4} xs={12}>\n                        <Card>\n                            <CardHeader\n                                title={\n                                    <Typography component=\"div\" className=\"card-header\">\n                                        Total Ratios\n                                    </Typography>\n                                }\n                            />\n                            <Divider />\n                            <CardContent>\n                                <Grid container spacing={gridSpacing}>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Test Positivity Ratio</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    {positivityRatio}%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={parseInt(positivityRatio)} color=\"primary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Active Ratio</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    {activeRatio}%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={parseInt(activeRatio)} color=\"secondary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Recovery Ratio</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    {recoveredRatio}%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={parseInt(recoveredRatio)} color=\"primary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Case Fatality Ratio</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    {fatalityRatio}%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={parseInt(fatalityRatio)} color=\"secondary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Vaccination Ratio</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    {vaccinated2Ratio}%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={parseInt(vaccinated2Ratio)} color=\"primary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <StateWiseDataCard title=\"State-wise Data\" />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}