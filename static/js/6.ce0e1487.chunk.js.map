{"version":3,"sources":["views/Charts/TotalDataChart.js","views/Charts/DailyDataChart.js","views/Charts/TotalVaccinationDoseChart.js","views/Charts/DailyVaccinationDoseChart.js","views/Charts/VaccinationCategoryChart.js","views/Charts/VaccinationGenderChart.js","views/Charts/CasesByStatesChart.js","views/Charts/VaccinationByStatesChart.js","views/Charts/index.js"],"names":["DATA_URL","DATA_API_ROOT","TotalDataChart","theme","useTheme","useState","dataData","setData","getData","a","fetch","then","response","json","TT","dates","useEffect","chartData","type","height","options","chart","sparkline","enabled","dataLabels","legend","show","position","fontFamily","labels","colors","palette","error","main","primary","success","warning","stroke","curve","width","tooltip","fixed","y","formatter","val","numDifferentiation","xaxis","categories","series","name","data","undefined","length","Object","keys","map","date","index","array","i","total","confirmed","push","recovered","deceased","Card","CardHeader","title","Typography","component","className","Divider","CardContent","Grid","container","spacing","gridSpacing","item","xs","alignItems","sm","zeroMinWidth","DailyDataChart","delta","VaccinationDoseChart","marker","vaccinated2","vaccinated1","VaccinationCatergotyChart","matchDownMd","useMediaQuery","breakpoints","down","matchDownXs","dataVaccineCategory","setVaccineCategory","chartAgeData","itemMargin","horizontal","vertical","value","covishield","covaxin","sputnik","VACCINE_API","topBlock","vaccination","t","direction","md","Hidden","only","justify","variant","style","color","dataVaccineGender","male","female","others","CasesByStatesChart","toolbar","x","state","STATE_NAMES","yaxis","text","responsive","breakpoint","plotOptions","bar","hideOverflowingLabels","hideOverlappingLabels","grid","states","Charts","vaccinated1Ratio","vaccinated2Ratio","meta","population","toFixed","lg","align","LinearProgress","parseInt","VaccinationCategoryChart","VaccinationGenderChart","VaccinationByStatesChart","TotalVaccinationDoseChart","DailyVaccinationDoseChart"],"mappings":"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","file":"static/js/6.ce0e1487.chunk.js","sourcesContent":["import React from 'react';\nimport { useTheme } from '@material-ui/styles';\nimport Chart from 'react-apexcharts';\nimport { DATA_API_ROOT, gridSpacing, numDifferentiation } from '../../store/constant';\nimport { Card, CardContent, Grid, Typography, CardHeader, Divider } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nconst DATA_URL = `${DATA_API_ROOT}/timeseries.min.json`;\n\nconst TotalDataChart = () => {\n    const theme = useTheme();\n\n    const [dataData, setData] = useState([]);\n\n    const getData = async () => {\n        await fetch(DATA_URL)\n          .then((response) => {\n            return response.json();\n          })\n          .then((json) => {\n            setData(json.TT.dates);\n          });\n    }\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    const chartData = {\n        type: 'line',\n        height: 300,\n        options: {\n            chart: {\n                sparkline: {\n                    enabled: true,\n                },\n            },\n            dataLabels: {\n                enabled: false,\n            },\n            legend: {\n                show: true,\n                position: 'top',\n                fontFamily: 'inherit',\n                labels: {\n                    colors: 'inherit',\n                    fontFamily: 'inherit',\n                }\n            },\n            colors: [\n                theme.palette.error.main,\n                theme.palette.primary.main,\n                theme.palette.success.main,\n                theme.palette.warning.main\n            ],\n            stroke: {\n                curve: 'smooth',\n                width: 3,\n            },\n            tooltip: {\n                theme: 'dark',\n                fixed: {\n                    enabled: false,\n                },\n                y: {\n                    formatter: function (val) {\n                      return numDifferentiation(val)\n                    }\n                }\n            },\n            xaxis: {\n                categories: []\n            }\n        },\n        series: [\n            {\n                name: 'Confirmed',\n                data: [],\n            },\n            {\n                name: 'Active',\n                data: [],\n            },\n            {\n                name: 'Recovered',\n                data: [],\n            },\n            {\n                name: 'Deceased',\n                data: [],\n            },\n        ]\n    };\n\n    if(dataData.length === undefined) {\n        Object.keys(dataData).map((date, index, array) => {\n            for(let i=1; i<=array.length; i=i+20) {\n                if(array.length-i === index) {\n                  if(dataData[date].total.confirmed !== undefined){\n                    chartData.series[0].data.push(dataData[date].total.confirmed);\n                    chartData.series[1].data.push(dataData[date].total.confirmed-dataData[date].total.recovered-dataData[date].total.deceased);\n                    chartData.series[2].data.push(dataData[date].total.recovered);\n                    chartData.series[3].data.push(dataData[date].total.deceased);\n                    chartData.options.xaxis.categories.push(date);\n                  }\n                }\n            }\n\n            return null;\n        });\n    }\n    \n    return (\n        <Card>\n            <CardHeader\n                title={\n                    <Typography component=\"div\" className=\"card-header\">\n                        Total Cases Trends\n                    </Typography>\n                }\n            />\n            <Divider />\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\">\n                            <Grid item sm zeroMinWidth>\n                                {chartData && (\n                                    <Grid item>\n                                        <Chart {...chartData} />\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </Grid>        \n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TotalDataChart;\n","import React from 'react';\nimport { useTheme } from '@material-ui/styles';\nimport Chart from 'react-apexcharts';\nimport { DATA_API_ROOT, gridSpacing, numDifferentiation } from '../../store/constant';\nimport { Card, CardContent, Grid, Typography, CardHeader, Divider } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nconst DATA_URL = `${DATA_API_ROOT}/timeseries.min.json`;\n\nconst DailyDataChart = () => {\n    const theme = useTheme();\n\n    const [dataData, setData] = useState([]);\n\n    const getData = async () => {\n        await fetch(DATA_URL)\n          .then((response) => {\n            return response.json();\n          })\n          .then((json) => {\n            setData(json.TT.dates);\n          });\n    }\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    const chartData = {\n        type: 'line',\n        height: 300,\n        options: {\n            chart: {\n                sparkline: {\n                    enabled: true,\n                },\n            },\n            dataLabels: {\n                enabled: false,\n            },\n            legend: {\n                show: true,\n                position: 'top',\n                fontFamily: 'inherit',\n                labels: {\n                    colors: 'inherit',\n                    fontFamily: 'inherit',\n                }\n            },\n            colors: [\n                theme.palette.error.main,\n                theme.palette.primary.main,\n                theme.palette.success.main,\n                theme.palette.warning.main\n            ],\n            stroke: {\n                curve: 'smooth',\n                width: 3,\n            },\n            tooltip: {\n                theme: 'dark',\n                fixed: {\n                    enabled: false,\n                },\n                y: {\n                    formatter: function (val) {\n                      return numDifferentiation(val)\n                    }\n                }\n            },\n            xaxis: {\n                categories: []\n            }\n        },\n        series: [\n            {\n                name: 'Confirmed',\n                data: [],\n            },\n            {\n                name: 'Active',\n                data: [],\n            },\n            {\n                name: 'Recovered',\n                data: [],\n            },\n            {\n                name: 'Deceased',\n                data: [],\n            },\n        ]\n    };\n\n    if(dataData.length === undefined) {\n        Object.keys(dataData).map((date, index, array) => {\n          for(let i=1; i<=array.length; i=i+20) {\n            if(array.length-i === index) {\n              if(dataData[date].delta.confirmed !== undefined){\n                chartData.series[0].data.push(dataData[date].delta.confirmed);\n                chartData.series[1].data.push(dataData[date].delta.confirmed-dataData[date].delta.recovered-dataData[date].delta.deceased);\n                chartData.series[2].data.push(dataData[date].delta.recovered);\n                chartData.series[3].data.push(dataData[date].delta.deceased);\n                chartData.options.xaxis.categories.push(date);\n              }\n            }\n          }\n\n          return null;\n        });\n    }\n    \n    return (\n        <Card>\n            <CardHeader\n                title={\n                    <Typography component=\"div\" className=\"card-header\">\n                      Daily Cases Trends\n                    </Typography>\n                }\n            />\n            <Divider />\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\">\n                            <Grid item sm zeroMinWidth>\n                                {chartData && (\n                                    <Grid item>\n                                        <Chart {...chartData} />\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </Grid>        \n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default DailyDataChart;\n","import React from 'react';\nimport { useTheme } from '@material-ui/styles';\nimport Chart from 'react-apexcharts';\nimport { DATA_API_ROOT, numDifferentiation, gridSpacing } from '../../store/constant';\nimport { Card, CardContent, Grid, Typography, CardHeader, Divider } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nconst DATA_URL = `${DATA_API_ROOT}/timeseries.min.json`;\n\nconst VaccinationDoseChart = () => {\n    const theme = useTheme();\n\n    const [dataData, setData] = useState([]);\n\n    const getData = async () => {\n        await fetch(DATA_URL)\n            .then((response) => {\n                return response.json();\n            })\n            .then((json) => {\n                setData(json.TT.dates);\n            });\n    }\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    const chartData = {\n        type: 'line',\n        height: 250,\n        options: {\n            chart: {\n                sparkline: {\n                    enabled: true,\n                }\n            },\n            dataLabels: {\n                enabled: false,\n            },\n            legend: {\n                show: true,\n                position: 'top',\n                fontFamily: 'inherit',\n                labels: {\n                    colors: 'inherit',\n                    fontFamily: 'inherit',\n                }\n            },\n            colors: [\n                theme.palette.primary.main,\n                theme.palette.success.main\n            ],\n            stroke: {\n                curve: 'smooth',\n                width: 3\n            },\n            tooltip: {\n                theme: 'dark',\n                fixed: {\n                    enabled: false,\n                },\n                marker: {\n                    show: false,\n                },\n                y: {\n                    formatter: function (val) {\n                      return numDifferentiation(val)\n                    }\n                }\n            },\n            xaxis: {\n                categories: []\n            }\n        },\n        series: [\n            {\n                name: 'First Dose',\n                data: [],\n            },\n            {\n                name: 'Second Dose',\n                data: [],\n            },\n        ]\n    };\n\n    if (dataData.length === undefined) {\n        Object.keys(dataData).map((date, index, array) => {\n            for(let i=1; i<=array.length; i=i+5) {\n                if(array.length-i === index) {\n                    if (dataData[date].total.vaccinated2 !== undefined) {\n                        chartData.series[0].data.push(dataData[date].total.vaccinated1);\n                        chartData.series[1].data.push(dataData[date].total.vaccinated2);\n                        chartData.options.xaxis.categories.push(date);\n                    }\n                }\n            }\n            return null;\n        });\n    }\n\n    return (\n        <Card>\n            <CardHeader\n                title={\n                    <Typography component=\"div\" className=\"card-header\">\n                        Total Vaccination Coverage\n                    </Typography>\n                }\n            />\n            <Divider />\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\">\n                            <Grid item sm zeroMinWidth>\n                                {chartData && (\n                                    <Grid item>\n                                        <Chart {...chartData} />\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </Grid>        \n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default VaccinationDoseChart;\n","import React from 'react';\nimport { useTheme } from '@material-ui/styles';\nimport Chart from 'react-apexcharts';\nimport { DATA_API_ROOT, numDifferentiation, gridSpacing } from '../../store/constant';\nimport { Card, CardContent, Grid, Typography, CardHeader, Divider } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nconst DATA_URL = `${DATA_API_ROOT}/timeseries.min.json`;\n\nconst VaccinationDoseChart = () => {\n    const theme = useTheme();\n\n    const [dataData, setData] = useState([]);\n\n    const getData = async () => {\n        await fetch(DATA_URL)\n            .then((response) => {\n                return response.json();\n            })\n            .then((json) => {\n                setData(json.TT.dates);\n            });\n    }\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    const chartData = {\n        type: 'line',\n        height: 250,\n        options: {\n            chart: {\n                sparkline: {\n                    enabled: true,\n                }\n            },\n            dataLabels: {\n                enabled: false,\n            },\n            legend: {\n                show: true,\n                position: 'top',\n                fontFamily: 'inherit',\n                labels: {\n                    colors: 'inherit',\n                    fontFamily: 'inherit',\n                }\n            },\n            colors: [\n                theme.palette.primary.main,\n                theme.palette.success.main\n            ],\n            stroke: {\n                curve: 'smooth',\n                width: 3\n            },\n            tooltip: {\n                theme: 'dark',\n                fixed: {\n                    enabled: false,\n                },\n                marker: {\n                    show: false,\n                },\n                y: {\n                    formatter: function (val) {\n                      return numDifferentiation(val)\n                    }\n                }\n            },\n            xaxis: {\n                categories: []\n            }\n        },\n        series: [\n            {\n                name: 'First Dose',\n                data: [],\n            },\n            {\n                name: 'Second Dose',\n                data: [],\n            },\n        ]\n    };\n\n    if (dataData.length === undefined) {\n        Object.keys(dataData).map((date, index, array) => {\n            for(let i=1; i<=array.length; i=i+5) {\n                if(array.length-i === index) {\n                    if (dataData[date].delta.vaccinated2 !== undefined) {\n                        chartData.series[0].data.push(dataData[date].delta.vaccinated1);\n                        chartData.series[1].data.push(dataData[date].delta.vaccinated2);\n                        chartData.options.xaxis.categories.push(date);\n                    }\n                }\n            }\n            return null;\n        });\n    }\n\n    return (\n        <Card>\n            <CardHeader\n                title={\n                    <Typography component=\"div\" className=\"card-header\">\n                        Daily Vaccination Coverage\n                    </Typography>\n                }\n            />\n            <Divider />\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\">\n                            <Grid item sm zeroMinWidth>\n                                {chartData && (\n                                    <Grid item>\n                                        <Chart {...chartData} />\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </Grid>        \n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default VaccinationDoseChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { useTheme } from '@material-ui/styles';\nimport { useState, useEffect } from 'react';\nimport value from '../../assets/scss/_themes-vars.scss';\nimport { Card, CardContent, CardHeader, Divider, Hidden, Grid, Typography, useMediaQuery } from '@material-ui/core';\n\nimport { VACCINE_API, numDifferentiation } from './../../store/constant';\n\nconst VaccinationCatergotyChart = () => {\n  const theme = useTheme();\n  const matchDownMd = useMediaQuery(theme.breakpoints.down('sm'));\n  const matchDownXs = useMediaQuery(theme.breakpoints.down('xs'));\n\n  const [dataVaccineCategory, setVaccineCategory] = useState([]);\n\n  const getVaccineCategory = () => {\n    fetch(VACCINE_API)\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        setVaccineCategory(json.topBlock.vaccination);\n      });\n  }\n\n  const chartAgeData = {\n    height: 225,\n    type: 'donut',\n    options: {\n      dataLabels: {\n        enabled: false,\n      },\n      labels: ['Covishield', 'Covaxin', 'Sputnik'],\n      legend: {\n        show: true,\n        position: 'bottom',\n        fontFamily: 'inherit',\n        labels: {\n          colors: 'inherit',\n          fontFamily: 'inherit',\n        },\n      },\n      tooltip: {\n        theme: 'dark',\n        y: {\n          formatter: function (val) {\n            return numDifferentiation(val)\n          }\n        }\n      },\n      itemMargin: {\n        horizontal: 10,\n        vertical: 10,\n      },\n      colors: [value.error, value.primary, value.warning],\n    },\n    series: [],\n  }\n\n  if (dataVaccineCategory.length === undefined) {\n    chartAgeData.series = [dataVaccineCategory.covishield, dataVaccineCategory.covaxin, dataVaccineCategory.sputnik];\n  }\n\n  useEffect(() => {\n    getVaccineCategory();\n  }, []);\n\n  return (\n    <Card>\n      <CardHeader\n        title={\n          <Typography t=\"div\" className=\"card-header\">\n            Vaccination Category\n          </Typography>\n        }\n      />\n      <Divider />\n      <CardContent>\n        <Grid container spacing={2} direction={matchDownMd && !matchDownXs ? 'row' : 'column'}>\n          <Grid item xs={12} sm={7} md={12}>\n            <Chart {...chartAgeData} />\n          </Grid>\n          <Hidden only=\"sm\">\n            <Grid item>\n              <Divider />\n            </Grid>\n          </Hidden>\n          <Grid\n            item\n            container\n            direction={matchDownMd && !matchDownXs ? 'column' : 'row'}\n            justify=\"space-around\"\n            alignItems=\"center\"\n            xs={12}\n            sm={5}\n            md={12}\n          >\n            <Grid item>\n              <Grid container direction=\"column\" alignItems=\"center\">\n                <Typography variant=\"h6\">Covishield</Typography>\n                <Typography variant=\"subtitle1\" style={{ color: theme.palette.error.main }}>\n                  {numDifferentiation(dataVaccineCategory.covishield)}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Grid container direction=\"column\" alignItems=\"center\">\n                <Typography variant=\"h6\">Covaxin</Typography>\n                <Typography variant=\"subtitle1\" style={{ color: theme.palette.primary.main }}>\n                  {numDifferentiation(dataVaccineCategory.covaxin)}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Grid container direction=\"column\" alignItems=\"center\">\n                <Typography variant=\"h6\">Sputnik</Typography>\n                <Typography variant=\"subtitle1\" style={{ color: theme.palette.warning.main }}>\n                  {numDifferentiation(dataVaccineCategory.sputnik)}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default VaccinationCatergotyChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { useTheme } from '@material-ui/styles';\nimport { useState, useEffect } from 'react';\nimport value from '../../assets/scss/_themes-vars.scss';\nimport { Card, CardContent, CardHeader, Divider, Hidden, Grid, Typography, useMediaQuery } from '@material-ui/core';\n\nimport { VACCINE_API, numDifferentiation } from '../../store/constant';\n\nconst VaccinationCatergotyChart = () => {\n  const theme = useTheme();\n  const matchDownMd = useMediaQuery(theme.breakpoints.down('sm'));\n  const matchDownXs = useMediaQuery(theme.breakpoints.down('xs'));\n\n  const [dataVaccineGender, setVaccineCategory] = useState([]);\n\n  const getVaccineCategory = () => {\n    fetch(VACCINE_API)\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        setVaccineCategory(json.topBlock.vaccination);\n      });\n  }\n\n  const chartAgeData = {\n    height: 225,\n    type: 'donut',\n    options: {\n      dataLabels: {\n        enabled: false,\n      },\n      labels: ['Male', 'Female', 'Others'],\n      legend: {\n        show: true,\n        position: 'bottom',\n        fontFamily: 'inherit',\n        labels: {\n          colors: 'inherit',\n          fontFamily: 'inherit',\n        },\n      },\n      tooltip: {\n        theme: 'dark',\n        y: {\n          formatter: function (val) {\n            return numDifferentiation(val)\n          }\n        }\n      },\n      itemMargin: {\n        horizontal: 10,\n        vertical: 10,\n      },\n      colors: [value.warning, value.success, value.error],\n    },\n    series: [],\n  }\n\n  if (dataVaccineGender.length === undefined) {\n    chartAgeData.series = [dataVaccineGender.male, dataVaccineGender.female, dataVaccineGender.others];\n  }\n\n  useEffect(() => {\n    getVaccineCategory();\n  }, []);\n\n  return (\n    <Card>\n      <CardHeader\n        title={\n          <Typography t=\"div\" className=\"card-header\">\n            Vaccination By Gender\n          </Typography>\n        }\n      />\n      <Divider />\n      <CardContent>\n        <Grid container spacing={2} direction={matchDownMd && !matchDownXs ? 'row' : 'column'}>\n          <Grid item xs={12} sm={7} md={12}>\n            <Chart {...chartAgeData} />\n          </Grid>\n          <Hidden only=\"lg\">\n            <Hidden only=\"sm\">\n              <Grid item>\n                <Divider />\n              </Grid>\n            </Hidden>\n            <Grid\n              item\n              container\n              direction={matchDownMd && !matchDownXs ? 'column' : 'row'}\n              justify=\"space-around\"\n              alignItems=\"center\"\n              xs={12}\n              sm={5}\n              md={12}\n            >\n              <Grid item>\n                <Grid container direction=\"column\" alignItems=\"center\">\n                  <Typography variant=\"h6\">Male</Typography>\n                  <Typography variant=\"subtitle1\" style={{ color: theme.palette.warning.main }}>\n                    {numDifferentiation(dataVaccineGender.male)}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container direction=\"column\" alignItems=\"center\">\n                  <Typography variant=\"h6\">Female</Typography>\n                  <Typography variant=\"subtitle1\" style={{ color: theme.palette.success.main }}>\n                    {numDifferentiation(dataVaccineGender.female)}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container direction=\"column\" alignItems=\"center\">\n                  <Typography variant=\"h6\">Others</Typography>\n                  <Typography variant=\"subtitle1\" style={{ color: theme.palette.error.main }}>\n                    {numDifferentiation(dataVaccineGender.others)}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Hidden>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default VaccinationCatergotyChart;\n","import React from 'react';\nimport { useTheme } from '@material-ui/styles';\nimport Chart from 'react-apexcharts';\nimport { DATA_API_ROOT, STATE_NAMES, gridSpacing, numDifferentiation } from '../../store/constant';\nimport { Card, CardContent, Grid, Typography, CardHeader, Divider } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nconst DATA_URL = `${DATA_API_ROOT}/data.min.json`;\n\nconst CasesByStatesChart = () => {\n    const theme = useTheme();\n\n    const [dataData, setData] = useState([]);\n\n    const getData = async () => {\n        await fetch(DATA_URL)\n          .then((response) => {\n            return response.json();\n          })\n          .then((json) => {\n            setData(json);\n          });\n    }\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    const chartData = {\n        type: 'bar',\n        height: 334,\n        options: {\n            chart: {\n                toolbar: {\n                  show: false\n                }\n            },\n            dataLabels: {\n                enabled: false,\n            },\n            legend: {\n                show: true,\n                position: 'top',\n                fontFamily: 'inherit',\n                labels: {\n                    colors: 'inherit',\n                    fontFamily: 'inherit',\n                }\n            },\n            colors: [\n                theme.palette.error.main,\n                theme.palette.primary.main,\n                theme.palette.success.main,\n                theme.palette.warning.main\n            ],\n            stroke: {\n                show: false\n            },\n            tooltip: {\n                theme: 'dark',\n                fixed: {\n                    enabled: false,\n                },\n                x: {\n                    formatter: function(state) {\n                        return STATE_NAMES[state];\n                    }\n                },\n                y: {\n                    formatter: function (val) {\n                      return numDifferentiation(val);\n                    }\n                }\n            },\n            yaxis: {\n                show: false,\n            },\n            xaxis: {\n                categories: [],\n                labels: {\n                    style: {\n                        colors: theme.palette.text.primary\n                    }\n                }\n            },\n            responsive: [{\n                breakpoint: 789,\n                options: {\n                    plotOptions: {\n                      bar: {\n                        dataLabels: {\n                            hideOverflowingLabels: true,\n                        }\n                      }\n                    }\n                },\n                xaxis: {\n                    labels: {\n                        hideOverlappingLabels: true,\n                    },\n                },\n            }],\n            grid: {\n                show: false,\n            }\n        },\n        series: [\n            {\n                name: 'Confirmed',\n                data: [],\n            },\n            {\n                name: 'Active',\n                data: [],\n            },\n            {\n                name: 'Recovered',\n                data: [],\n            },\n            {\n                name: 'Deceased',\n                data: [],\n            },\n        ]\n    };\n\n    if(dataData.length === undefined) {\n        Object.keys(dataData).map((states) => {\n            if(states!=='TT') {\n                chartData.series[0].data.push(dataData[states].total.confirmed);\n                chartData.series[1].data.push(dataData[states].total.confirmed-dataData[states].total.recovered-dataData[states].total.deceased);\n                chartData.series[2].data.push(dataData[states].total.recovered);\n                chartData.series[3].data.push(dataData[states].total.deceased);\n                chartData.options.xaxis.categories.push(states);\n            }\n            return null;\n        });\n    }\n    \n    return (\n        <Card>\n            <CardHeader\n                title={\n                    <Typography component=\"div\" className=\"card-header\">\n                        Cases By States\n                    </Typography>\n                }\n            />\n            <Divider />\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\">\n                            <Grid item sm zeroMinWidth>\n                                {chartData && (\n                                    <Grid item>\n                                        <Chart {...chartData} />\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </Grid>        \n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default CasesByStatesChart;\n","import React from 'react';\nimport { useTheme } from '@material-ui/styles';\nimport Chart from 'react-apexcharts';\nimport { DATA_API_ROOT, gridSpacing, STATE_NAMES, numDifferentiation } from '../../store/constant';\nimport { Card, CardContent, Grid, Typography, CardHeader, Divider } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nconst DATA_URL = `${DATA_API_ROOT}/data.min.json`;\n\nconst CasesByStatesChart = () => {\n    const theme = useTheme();\n\n    const [dataData, setData] = useState([]);\n\n    const getData = async () => {\n        await fetch(DATA_URL)\n          .then((response) => {\n            return response.json();\n          })\n          .then((json) => {\n            setData(json);\n          });\n    }\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    const chartData = {\n        type: 'bar',\n        height: 334,\n        options: {\n            chart: {\n                toolbar: {\n                  show: false\n                }\n            },\n            dataLabels: {\n                enabled: false,\n            },\n            legend: {\n                show: true,\n                position: 'top',\n                fontFamily: 'inherit',\n                labels: {\n                    colors: 'inherit',\n                    fontFamily: 'inherit',\n                }\n            },\n            colors: [\n                theme.palette.primary.main,\n                theme.palette.warning.main\n            ],\n            stroke: {\n                show: false,\n            },\n            tooltip: {\n                theme: 'dark',\n                fixed: {\n                    enabled: false,\n                },\n                x: {\n                    formatter: function(state) {\n                        return STATE_NAMES[state];\n                    }\n                },\n                y: {\n                    formatter: function (val) {\n                      return numDifferentiation(val)\n                    }\n                }\n            },\n            yaxis: {\n                show: false,\n            },\n            xaxis: {\n                categories: [],\n                labels: {\n                    style: {\n                        colors: theme.palette.text.primary\n                    }\n                }\n            },\n            responsive: [{\n                breakpoint: 789,\n                options: {\n                    plotOptions: {\n                      bar: {\n                        dataLabels: {\n                            hideOverflowingLabels: true,\n                        }\n                      }\n                    }\n                },\n                xaxis: {\n                    labels: {\n                        hideOverlappingLabels: true,\n                    },\n                },\n            }],\n            grid: {\n                show: false,\n            }\n        },\n        series: [\n            {\n                name: 'First Dose',\n                data: [],\n            },\n            {\n                name: 'Second Dose',\n                data: [],\n            },\n        ]\n    };\n\n    if(dataData.length === undefined) {\n        Object.keys(dataData).map((states) => {\n            if(states!=='TT') {\n                chartData.series[0].data.push(dataData[states].total.vaccinated1);\n                chartData.series[1].data.push(dataData[states].total.vaccinated2);\n                chartData.options.xaxis.categories.push(states);\n            }\n            return null;\n        });\n    }\n    \n    return (\n        <Card>\n            <CardHeader\n                title={\n                    <Typography component=\"div\" className=\"card-header\">\n                        Cases By States\n                    </Typography>\n                }\n            />\n            <Divider />\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\">\n                            <Grid item sm zeroMinWidth>\n                                {chartData && (\n                                    <Grid item>\n                                        <Chart {...chartData} />\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </Grid>        \n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default CasesByStatesChart;\n","import React from 'react';\nimport { Grid, Card, CardHeader, CardContent, Typography, Divider, LinearProgress } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nimport TotalDataChart from './TotalDataChart';\nimport DailyDataChart from './DailyDataChart';\nimport TotalVaccinationDoseChart from './TotalVaccinationDoseChart';\nimport DailyVaccinationDoseChart from './DailyVaccinationDoseChart';\nimport VaccinationCategoryChart from './VaccinationCategoryChart';\nimport VaccinationGenderChart from './VaccinationGenderChart';\nimport CasesByStatesChart from './CasesByStatesChart';\nimport VaccinationByStatesChart from './VaccinationByStatesChart';\n\nimport { DATA_API_ROOT, gridSpacing } from './../../store/constant';\nconst DATA_URL = `${DATA_API_ROOT}/data.min.json`;\n\nconst Charts = () => {\n\n    const [dataData, setData] = useState([]);\n\n    const getData = async () => {\n        await fetch(DATA_URL)\n            .then((response) => {\n                return response.json();\n            })\n            .then((json) => {\n                setData(json.TT);\n            });\n    }\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    let vaccinated1Ratio = 0, vaccinated2Ratio = 0;\n    if (dataData.length === undefined) {\n        vaccinated1Ratio = ((dataData.total.vaccinated1 / dataData.meta.population) * 100).toFixed(2);\n        vaccinated2Ratio = ((dataData.total.vaccinated2 / dataData.meta.population) * 100).toFixed(2);\n    }\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={6} sm={12} xs={12}>\n                        <TotalDataChart title=\"Total Cases Trends\" />\n                    </Grid>\n                    <Grid item lg={6} sm={12} xs={12}>\n                        <DailyDataChart title=\"Daily Cases Trends\" />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={4} xs={12}>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12} sm={12}>\n                                <Grid container spacing={gridSpacing} direction=\"column\">\n                                    <Grid item xs={12}>\n                                        <Card>\n                                            <CardHeader\n                                                title={\n                                                    <Typography component=\"div\" className=\"card-header\">\n                                                        Vaccination\n                                                    </Typography>\n                                                }\n                                            />\n                                            <Divider />\n                                            <CardContent>\n                                                <Grid container spacing={gridSpacing}>\n                                                    <Grid item xs={12}>\n                                                        <Grid container alignItems=\"center\" spacing={1}>\n                                                            <Grid item sm zeroMinWidth>\n                                                                <Typography variant=\"body2\">At lease one dose</Typography>\n                                                            </Grid>\n                                                            <Grid item>\n                                                                <Typography variant=\"body2\" align=\"right\">\n                                                                    {vaccinated1Ratio}%\n                                                                </Typography>\n                                                            </Grid>\n                                                            <Grid item xs={12}>\n                                                                <LinearProgress variant=\"determinate\" value={parseInt(vaccinated1Ratio)} color=\"primary\" />\n                                                            </Grid>\n                                                        </Grid>\n                                                    </Grid>\n                                                    <Grid item xs={12}>\n                                                        <Grid container alignItems=\"center\" spacing={1}>\n                                                            <Grid item sm zeroMinWidth>\n                                                                <Typography variant=\"body2\">Fully vaccinated</Typography>\n                                                            </Grid>\n                                                            <Grid item>\n                                                                <Typography variant=\"body2\" align=\"right\">\n                                                                    {vaccinated2Ratio}%\n                                                                </Typography>\n                                                            </Grid>\n                                                            <Grid item xs={12}>\n                                                                <LinearProgress variant=\"determinate\" value={parseInt(vaccinated2Ratio)} color=\"secondary\" />\n                                                            </Grid>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </CardContent>\n                                        </Card>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <VaccinationCategoryChart title=\"Vaccination Category\" />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <VaccinationGenderChart title=\"Vaccination Gender\" />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item lg={8} xs={12}>\n                        <Grid container spacing={gridSpacing} direction=\"column\">\n                            <Grid item xs={12} sm={12}>\n                                <CasesByStatesChart title=\"Cases By States\" />\n                            </Grid>\n                            <Grid item xs={12} sm={12}>\n                                <VaccinationByStatesChart title=\"Total Vaccination Coverage\" />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <TotalVaccinationDoseChart title=\"Total Vaccination Coverage\" />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <DailyVaccinationDoseChart title=\"Daily Vaccination Coverage\" />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Charts;\n"],"sourceRoot":""}