{"version":3,"sources":["views/Dashboard/VaccinatedLineCard.js","views/Dashboard/VaccineByAgeCard.js","views/Dashboard/CovidDataCard/index.js","views/Dashboard/StateWiseDataCard/index.js","views/Dashboard/index.js"],"names":["DATA_URL","DATA_API_ROOT","useStyles","makeStyles","content","padding","paddingBottom","SalesLineCard","props","footerHtml","classes","theme","useTheme","bgColor","footerData","title","vaccinedose","useState","dataData","setData","getData","a","fetch","then","response","json","TT","dates","chartData","type","height","options","chart","sparkline","enabled","dataLabels","colors","stroke","curve","width","tooltip","fixed","marker","show","xaxis","categories","series","name","data","undefined","length","Object","keys","map","date","index","array","i","total","firstdosevaccinated","push","seconddosevaccinated","item","Grid","key","Box","mt","mb","p","container","direction","spacing","alignItems","Typography","variant","value","color","label","useEffect","Card","CardContent","className","bgcolor","palette","primary","main","justify","VaccineByAgeCard","matchDownMd","useMediaQuery","breakpoints","down","matchDownXs","dataVaccineByAge","setVaccineByAge","chartAgeData","labels","legend","position","fontFamily","itemMargin","horizontal","vertical","error","warning","vac_18_45","vac_45_60","above_60","VACCINE_API","vaccinationByAge","CardHeader","t","Divider","xs","sm","md","Hidden","only","style","numDifferentiation","secondary","marginTop","footer","textAlign","paddingLeft","paddingRight","common","white","flexDirection","up","primaryIcon","marginBottom","CovidDataCard","IconFooter","iconPrimary","iconFooter","IconPrimary","fontSize","TrendingUpIcon","TrendingDownIcon","footerIcon","primaryData","lg","background","table","minWidth","row","celllg","display","cellsm","confirmed","recovered","success","deceased","StateWiseDataCard","dataTable","setTable","gridSpacing","component","TableContainer","Table","size","aria-label","TableHead","TableRow","TableCell","TableBody","STATE_NAMES","parseInt","toLocaleString","checkNumber","delta","tested","vaccinated","meta","population","arrowicon","verticalAlign","flatcardbody","flatcardblock","borderLeft","default","borderBottom","textsuccess","texterror","Dashboard","conf","recv","decs","actv","confDelta","recvDelta","decsDelta","actvDelta","positivityRatio","activeRatio","recoveredRatio","fatalityRatio","vaccinatedRatio","totalVaccine","firstDose","secondDose","arrowCnf","arrowAct","arrowRecv","arrowDecs","toFixed","HotelTwoToneIcon","HowToRegTwoToneIcon","FavoriteTwoToneIcon","SentimentVeryDissatisfiedTwoToneIcon","VaccinatedLineCard","align","zeroMinWidth","LinearProgress"],"mappings":"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","file":"static/js/4.ea6775e6.chunk.js","sourcesContent":["import React from 'react';\nimport { useTheme } from '@material-ui/styles';\nimport Chart from 'react-apexcharts';\nimport { DATA_API_ROOT } from './../../store/constant';\nimport { Box, Card, CardContent, Grid, makeStyles, Typography } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nconst DATA_URL = `${DATA_API_ROOT}/timeseries.min.json`;\n\nconst useStyles = makeStyles(() => ({\n    content: {\n        padding: 0,\n        paddingBottom: '0 !important',\n    },\n}));\n\nconst SalesLineCard = (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const { bgColor, footerData, title, vaccinedose } = props;\n\n    const [dataData, setData] = useState([]);\n\n    const getData = async () => {\n        await fetch(DATA_URL)\n          .then((response) => {\n            return response.json();\n          })\n          .then((json) => {\n            setData(json.TT.dates);\n          });\n    }\n\n    const chartData = {\n        type: 'line',\n        height: 115,\n        options: {\n            chart: {\n                sparkline: {\n                    enabled: true,\n                },\n            },\n            dataLabels: {\n                enabled: false,\n            },\n            colors: ['#fff'],\n    \n            stroke: {\n                curve: 'smooth',\n                width: 3,\n            },\n            tooltip: {\n                theme: 'dark',\n                fixed: {\n                    enabled: false,\n                },\n                marker: {\n                    show: false,\n                }\n            },\n            xaxis: {\n                categories: []\n            }\n        },\n        series: [\n            {\n                name: 'First Dose',\n                data: [],\n            },\n            {\n                name: 'Second Dose',\n                data: [],\n            },\n        ]\n    };\n\n    if(dataData.length === undefined) {\n        Object.keys(dataData).map((date, index, array) => {\n            for(let i=0; i<=100; i++) {\n                if(array.length-i === index) {\n                    if(dataData[date].total.firstdosevaccinated !== undefined){\n                        chartData.series[0].data.push(dataData[date].total.firstdosevaccinated);\n                        chartData.series[1].data.push(dataData[date].total.seconddosevaccinated);\n                        chartData.options.xaxis.categories.push(date);\n                    }\n                }\n            }\n            return null;\n        })\n    }\n\n    let footerHtml;\n    if (footerData) {\n        footerHtml = footerData.map((item, index) => {\n            return (\n                <Grid item key={index}>\n                    <Box mt={3} mb={3} p={1}>\n                        <Grid container direction=\"column\" spacing={1} alignItems=\"center\">\n                            <Typography variant=\"h4\">{item.value}</Typography>\n                            <Typography variant=\"subtitle2\" color=\"secondary\">\n                                {item.label}\n                            </Typography>\n                        </Grid>\n                    </Box>\n                </Grid>\n            );\n        });\n    }\n    \n    useEffect(() => {\n        getData();\n    }, []);\n\n    return (\n        <Card>\n            <CardContent className={classes.content}>\n                <Box color=\"#fff\" bgcolor={bgColor ? bgColor : theme.palette.primary.main} p={3}>\n                    <Grid container direction=\"column\" spacing={1}>\n                        <Grid item container justify=\"space-between\" alignItems=\"center\">\n                            {title && (\n                                <Grid item>\n                                    <Typography variant=\"subtitle1\" color=\"inherit\">\n                                        {title}\n                                    </Typography>\n                                </Grid>\n                            )}\n                            <Grid item>\n                                <Grid container alignItems=\"center\">\n                                    {vaccinedose && (\n                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                            {vaccinedose}\n                                        </Typography>\n                                    )}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        {chartData && (\n                            <Grid item>\n                                <Chart {...chartData} />\n                            </Grid>\n                        )}\n                    </Grid>\n                </Box>\n                {footerData && (\n                    <Grid container justify=\"space-around\" alignItems=\"center\">\n                        {footerHtml}\n                    </Grid>\n                )}\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default SalesLineCard;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { useTheme } from '@material-ui/styles';\nimport { useState, useEffect } from 'react';\nimport value from '../../assets/scss/_themes-vars.scss';\nimport { Card, CardContent, CardHeader, Divider, Hidden, Grid, Typography, useMediaQuery } from '@material-ui/core';\n\nimport { VACCINE_API, numDifferentiation } from './../../store/constant';\n\nconst VaccineByAgeCard = (props) => {\n    const theme = useTheme();\n    const matchDownMd = useMediaQuery(theme.breakpoints.down('sm'));\n    const matchDownXs = useMediaQuery(theme.breakpoints.down('xs'));\n\n    const [dataVaccineByAge, setVaccineByAge] = useState([]);\n\n    const getVaccineByAge = () => {\n        fetch(VACCINE_API)\n          .then((response) => {\n            return response.json();\n          })\n          .then((json) => {\n            setVaccineByAge(json.vaccinationByAge);\n        });\n    }\n    \n    const chartAgeData = {\n        height: 225,\n        type: 'donut',\n        options: {\n            dataLabels: {\n                enabled: false,\n            },\n            labels: ['18 - 45', '45 - 60', 'Above 60'],\n            legend: {\n                show: true,\n                position: 'bottom',\n                fontFamily: 'inherit',\n                labels: {\n                    colors: 'inherit',\n                    fontFamily: 'inherit',\n                },\n            },\n            itemMargin: {\n                horizontal: 10,\n                vertical: 10,\n            },\n            colors: [value.error, value.primary, value.warning],\n        },\n        series: [0, 0, 0],\n    }\n\n    if(dataVaccineByAge.length === undefined) {\n        chartAgeData.series = [dataVaccineByAge.vac_18_45, dataVaccineByAge.vac_45_60, dataVaccineByAge.above_60];\n    }\n\n    useEffect(() => {\n        getVaccineByAge();\n    }, []);\n\n    return (\n        <Card>\n            <CardHeader\n                title={\n                    <Typography t=\"div\" className=\"card-header\">\n                        Vaccination By Age\n                    </Typography>\n                }\n            />\n            <Divider />\n            <CardContent>\n                <Grid container spacing={2} direction={matchDownMd && !matchDownXs ? 'row' : 'column'}>\n                    <Grid item xs={12} sm={7} md={12}>\n                        <Chart {...chartAgeData} />\n                    </Grid>\n                    <Hidden only=\"sm\">\n                        <Grid item>\n                            <Divider />\n                        </Grid>\n                    </Hidden>\n                    <Grid\n                        item\n                        container\n                        direction={matchDownMd && !matchDownXs ? 'column' : 'row'}\n                        justify=\"space-around\"\n                        alignItems=\"center\"\n                        xs={12}\n                        sm={5}\n                        md={12}\n                    >\n                        <Grid item>\n                            <Grid container direction=\"column\" alignItems=\"center\">\n                                <Typography variant=\"h6\">18 - 45</Typography>\n                                <Typography variant=\"subtitle1\" style={{ color: theme.palette.error.main }}>\n                                    {numDifferentiation(dataVaccineByAge.vac_18_45)}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Grid container direction=\"column\" alignItems=\"center\">\n                                <Typography variant=\"h6\">45 - 60</Typography>\n                                <Typography variant=\"subtitle1\" style={{ color: theme.palette.primary.main }}>\n                                        {numDifferentiation(dataVaccineByAge.vac_45_60)}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Grid container direction=\"column\" alignItems=\"center\">\n                                <Typography variant=\"h6\">Above 60</Typography>\n                                <Typography variant=\"subtitle1\" style={{ color: theme.palette.warning.main }}>\n                                    {numDifferentiation(dataVaccineByAge.above_60)}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default VaccineByAgeCard;\n","import React from 'react';\n\nimport { makeStyles, Card, CardContent, Grid, Typography } from '@material-ui/core';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport TrendingDownIcon from '@material-ui/icons/TrendingDown';\n\nconst useStyles = makeStyles((theme) => ({\n    secondary: {\n        marginTop: '.5rem',\n    },\n    footer: {\n        textAlign: 'center',\n        padding: theme.spacing(1.2),\n        paddingLeft: '20px',\n        paddingRight: '20px',\n        color: theme.palette.common.white,\n    },\n    container: {\n        [theme.breakpoints.down('sm')]: {\n            flexDirection: 'column-reverse',\n        },\n        [theme.breakpoints.up('sm')]: {\n            alignItems: 'center',\n        }\n    },\n    primaryIcon: {\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '.5rem',\n        }\n    }\n}));\n\nconst CovidDataCard = (props) => {\n    const { primary, secondary, iconPrimary, color, footerData, iconFooter } = props;\n    const classes = useStyles();\n\n    const IconPrimary = iconPrimary;\n    const primaryIcon = iconPrimary ? <IconPrimary fontSize=\"large\" /> : null;\n\n    let IconFooter;\n    if(iconFooter === 1) {\n        IconFooter = TrendingUpIcon;\n    }\n    if(iconFooter === 2) {\n        IconFooter = TrendingDownIcon;\n    }\n    const footerIcon = IconFooter ? <IconFooter /> : null;\n    const primaryData = primary ? primary : 0;\n\n    return (\n        <Card>\n            <CardContent>\n                <Grid container justify=\"space-between\" className={classes.container}>\n                    <Grid item lg={6} sm={6} xs={12}>\n                        <Typography variant=\"h3\" style={{ color: color }}>\n                            {primaryData}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" className={classes.secondary}>\n                            {secondary}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"h2\" style={{ color: color }} className={classes.primaryIcon}>\n                            {primaryIcon}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <div style={{ background: color }}>\n                <Grid container justify=\"space-between\" className={classes.footer}>\n                    <Grid item>\n                        <Typography variant=\"body2\">{footerData}</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"body2\">{footerIcon}</Typography>\n                    </Grid>\n                </Grid>\n            </div>\n        </Card>\n    );\n};\n\nexport default CovidDataCard;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n    Card,\n    CardHeader,\n    Divider,\n    Grid,\n    CardContent,\n    Typography\n} from '@material-ui/core';\n\nimport { DATA_API_ROOT, gridSpacing, STATE_NAMES, numDifferentiation, checkNumber } from '../../../store/constant';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst DATA_URL = `${DATA_API_ROOT}/data.min.json`;\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        minWidth: 350,\n    },\n    row: {\n        padding: '1rem',\n        paddingLeft: '1.5rem',\n        paddingRight: '1.5rem',\n    },\n    celllg: {\n        padding: '1rem',\n        paddingLeft: '1.5rem',\n        paddingRight: '1.5rem',\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n    cellsm: {\n        padding: '1rem',\n        paddingLeft: '1.5rem',\n        paddingRight: '1.5rem',\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    confirmed: {\n        color: theme.palette.error.main,\n        fontSize: 12,\n    },\n    recovered: {\n        color: theme.palette.success.main,\n        fontSize: 12,\n    },\n    deceased: {\n        color: theme.palette.warning.main,\n        fontSize: 12,\n    },\n}));\n\nexport default function StateWiseDataCard() {\n    const classes = useStyles();\n\n    const [dataTable, setTable] = useState([]);\n\n    const getData = async () => {\n        await fetch(DATA_URL)\n          .then((response) => {\n            return response.json();\n          })\n          .then((json) => {\n            setTable(json);\n          });\n      }\n      \n    useEffect(() => {\n        getData();\n    }, []);\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Card>\n                    <CardHeader\n                        title={\n                            <Typography component=\"div\" className=\"card-header\">\n                                State-wise Data\n                            </Typography>\n                        }\n                    />\n                    <Divider />\n                    <CardContent className=\"p-0\">\n                        <TableContainer>\n                            <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell className={classes.row}>State</TableCell>\n                                        <TableCell>Confirmed</TableCell>\n                                        <TableCell>Active</TableCell>\n                                        <TableCell>Recovered</TableCell>\n                                        <TableCell>Deceased</TableCell>\n                                        <TableCell>Tested</TableCell>\n                                        <TableCell>Vaccinated</TableCell>\n                                        <TableCell>Population</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {Object.keys(dataTable).map((row, index) => (\n                                        <TableRow key={index}>\n                                            <TableCell className={classes.celllg}>{STATE_NAMES[row]}</TableCell>\n                                            <TableCell className={classes.cellsm}>{row}</TableCell>\n                                            <TableCell><div>{parseInt(dataTable[row].total.confirmed).toLocaleString('en-IN')}</div><div className={classes.confirmed}>{checkNumber(parseInt(dataTable[row].delta?.confirmed).toLocaleString('en-IN'))}</div></TableCell>\n                                            <TableCell>{(parseInt(dataTable[row].total.confirmed) - parseInt(dataTable[row].total.recovered) - parseInt(dataTable[row].total.deceased)).toLocaleString('en-IN')}</TableCell>\n                                            <TableCell><div>{parseInt(dataTable[row].total.recovered).toLocaleString('en-IN')}</div><div className={classes.recovered}>{checkNumber(parseInt(dataTable[row].delta?.recovered).toLocaleString('en-IN'))}</div></TableCell>\n                                            <TableCell><div>{parseInt(dataTable[row].total.deceased).toLocaleString('en-IN')}</div><div className={classes.deceased}>{checkNumber(parseInt(dataTable[row].delta?.deceased).toLocaleString('en-IN'))}</div></TableCell>\n                                            <TableCell>{numDifferentiation(parseInt(dataTable[row].total.tested))}</TableCell>\n                                            <TableCell>{numDifferentiation(parseInt(dataTable[row].total.vaccinated))}</TableCell>\n                                            <TableCell>{numDifferentiation(parseInt(dataTable[row].meta.population))}</TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n    );\n}\n","import React from 'react';\nimport { makeStyles, Grid, Card, CardHeader, CardContent, Hidden, Typography, Divider, LinearProgress } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useState, useEffect } from 'react';\nimport HotelTwoToneIcon from '@material-ui/icons/HotelTwoTone';\nimport HowToRegTwoToneIcon from '@material-ui/icons/HowToRegTwoTone';\nimport FavoriteTwoToneIcon from '@material-ui/icons/FavoriteTwoTone';\nimport SentimentVeryDissatisfiedTwoToneIcon from '@material-ui/icons/SentimentVeryDissatisfiedTwoTone';\nimport VaccinatedLineCard from './VaccinatedLineCard';\n\nimport VaccineByAgeCard from './VaccineByAgeCard';\n\nimport CovidDataCard from './CovidDataCard';\nimport StateWiseDataCard from './StateWiseDataCard';\n\nimport { DATA_API_ROOT, gridSpacing, numDifferentiation } from './../../store/constant';\nconst DATA_URL = `${DATA_API_ROOT}/data.min.json`;\n\nconst useStyles = makeStyles((theme) => ({\n    arrowicon: {\n        '& svg': {\n            width: '20px',\n            height: '20px',\n            verticalAlign: 'top',\n        },\n    },\n    flatcardbody: {\n        padding: '0px !important',\n        '& svg': {\n            width: '40px',\n            height: '40px',\n        },\n    },\n    flatcardblock: {\n        padding: '25px 25px',\n        borderLeft: '1px solid' + theme.palette.background.default,\n        [theme.breakpoints.down('xs')]: {\n            borderLeft: 'none',\n            borderBottom: '1px solid' + theme.palette.background.default,\n        },\n        [theme.breakpoints.down('sm')]: {\n            borderBottom: '1px solid' + theme.palette.background.default,\n        },\n    },\n    textsuccess: {\n        color: theme.palette.success.main,\n    },\n    texterror: {\n        color: theme.palette.error.main,\n    },\n}));\n\nconst Dashboard = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const [dataData, setData] = useState([]);\n\n    const getData = async () => {\n        await fetch(DATA_URL)\n          .then((response) => {\n            return response.json();\n          })\n          .then((json) => {\n            setData(json.TT);\n          });\n    }\n\n    let conf = 0, recv = 0, decs = 0, actv = 0, confDelta = 0, recvDelta = 0, decsDelta = 0, actvDelta = 0, positivityRatio = 0, activeRatio = 0, recoveredRatio = 0, fatalityRatio = 0, vaccinatedRatio = 0, totalVaccine = 0, firstDose = 0, secondDose = 0;\n    let arrowCnf=0, arrowAct=0, arrowRecv=0, arrowDecs=0;\n    if(dataData.length === undefined) {\n        conf = numDifferentiation(dataData.total.confirmed);\n        recv = numDifferentiation(dataData.total.recovered);\n        decs = numDifferentiation(dataData.total.deceased);\n        actv = numDifferentiation(dataData.total.confirmed - dataData.total.recovered - dataData.total.deceased);\n        confDelta = parseInt(dataData.delta.confirmed).toLocaleString('en-IN');\n        recvDelta = parseInt(dataData.delta.recovered).toLocaleString('en-IN');\n        decsDelta = parseInt(dataData.delta.deceased).toLocaleString('en-IN');\n        actvDelta = parseInt(dataData.delta.confirmed - dataData.delta.recovered - dataData.delta.deceased).toLocaleString('en-IN');\n        positivityRatio = ((dataData.total.confirmed / dataData.total.tested)*100).toFixed(2);\n        activeRatio = (((dataData.total.confirmed - dataData.total.recovered - dataData.total.deceased) / dataData.total.confirmed)*100).toFixed(2);\n        recoveredRatio = ((dataData.total.recovered / dataData.total.confirmed)*100).toFixed(2);\n        fatalityRatio = ((dataData.total.deceased / dataData.total.confirmed)*100).toFixed(2);\n        vaccinatedRatio = ((dataData.total.seconddosevaccinated / dataData.meta.population)*100).toFixed(2);\n\n        if(dataData.delta.confirmed > 0) { arrowCnf = 1 } else { arrowCnf = 2 }\n        if(dataData.delta.confirmed - dataData.delta.recovered - dataData.delta.deceased > 0) { arrowAct = 1 } else { arrowAct = 2 }\n        if(dataData.delta.recovered > 0) { arrowRecv = 1 } else { arrowRecv = 2 }\n        if(dataData.delta.deceased > 0) { arrowDecs = 1 } else { arrowDecs = 2 }\n\n        totalVaccine = dataData.total.vaccinated;\n        firstDose = dataData.total.firstdosevaccinated;\n        secondDose = dataData.total.seconddosevaccinated;\n    }\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={3} sm={6} xs={6}>\n                        <CovidDataCard\n                            primary={conf}\n                            secondary=\"Confirmed\"\n                            color={theme.palette.error.main}\n                            footerData={confDelta}\n                            iconPrimary={HotelTwoToneIcon}\n                            iconFooter={arrowCnf}\n                        />\n                    </Grid>\n                    <Grid item lg={3} sm={6} xs={6}>\n                        <CovidDataCard\n                            primary={actv}\n                            secondary=\"Active\"\n                            color={theme.palette.primary.main}\n                            footerData={actvDelta}\n                            iconPrimary={HowToRegTwoToneIcon}\n                            iconFooter={arrowAct}\n                        />\n                    </Grid>\n                    <Grid item lg={3} sm={6} xs={6}>\n                        <CovidDataCard\n                            primary={recv}\n                            secondary=\"Recovered\"\n                            color={theme.palette.success.main}\n                            footerData={recvDelta}\n                            iconPrimary={FavoriteTwoToneIcon}\n                            iconFooter={arrowRecv}\n                        />\n                    </Grid>\n                    <Grid item lg={3} sm={6} xs={6}>\n                        <CovidDataCard\n                            primary={decs}\n                            secondary=\"Deceased\"\n                            color={theme.palette.warning.main}\n                            footerData={decsDelta}\n                            iconPrimary={SentimentVeryDissatisfiedTwoToneIcon}\n                            iconFooter={arrowDecs}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={8} xs={12}>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12} sm={6}>\n                                <Grid container spacing={gridSpacing} direction=\"column\">\n                                    <Grid item xs={12}>\n                                        <VaccinatedLineCard\n                                            title=\"Vaccine Dose Administrated\"\n                                            vaccinedose={numDifferentiation(totalVaccine)}\n                                            footerData={[\n                                                {\n                                                    value: numDifferentiation(firstDose),\n                                                    label: 'First Dose',\n                                                },\n                                                {\n                                                    value: numDifferentiation(secondDose),\n                                                    label: 'Second Dose',\n                                                },\n                                            ]}\n                                        />\n                                    </Grid>\n                                    <Hidden only=\"sm\">\n                                        <Grid item xs={12}>\n                                            <Card>\n                                                <CardContent className={classes.flatcardbody}>\n                                                    <Grid container alignItems=\"center\" spacing={0}>\n                                                        <Grid item sm={6} xs={12} className={classes.flatcardblock}>\n                                                            <Grid container alignItems=\"center\" spacing={1}>\n                                                                <Grid item>\n                                                                    <Typography variant=\"subtitle2\" align=\"left\">\n                                                                        vaccinated\n                                                                    </Typography>\n                                                                </Grid>\n                                                                <Grid item sm zeroMinWidth>\n                                                                    <Typography variant=\"h5\" className={classes.texterror} align=\"right\">\n                                                                        {vaccinatedRatio}%\n                                                                    </Typography>\n                                                                </Grid>\n                                                            </Grid>\n                                                        </Grid>\n                                                        <Grid item sm={6} xs={12} className={classes.flatcardblock}>\n                                                            <Grid container alignItems=\"center\" spacing={1}>\n                                                                <Grid item>\n                                                                    <Typography variant=\"subtitle2\" align=\"left\">\n                                                                        Recovery\n                                                                    </Typography>\n                                                                </Grid>\n                                                                <Grid item sm zeroMinWidth>\n                                                                    <Typography variant=\"h5\" className={classes.textsuccess} align=\"right\">\n                                                                        {recoveredRatio}%\n                                                                    </Typography>\n                                                                </Grid>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </Grid>\n                                                </CardContent>\n                                            </Card>\n                                        </Grid>\n                                    </Hidden>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <VaccineByAgeCard title=\"Vaccination By Age\" />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item lg={4} xs={12}>\n                        <Card>\n                            <CardHeader\n                                title={\n                                    <Typography component=\"div\" className=\"card-header\">\n                                        Total Ratios\n                                    </Typography>\n                                }\n                            />\n                            <Divider />\n                            <CardContent>\n                                <Grid container spacing={gridSpacing}>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Test Positivity Ratio</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    {positivityRatio}%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={parseInt(positivityRatio)} color=\"primary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Active Ratio</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    {activeRatio}%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={parseInt(activeRatio)} color=\"secondary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Recovery Ratio</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    {recoveredRatio}%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={parseInt(recoveredRatio)} color=\"primary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Case Fatality Ratio</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    {fatalityRatio}%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={parseInt(fatalityRatio)} color=\"secondary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Vaccinated Ratio</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    {vaccinatedRatio}%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={parseInt(vaccinatedRatio)} color=\"primary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <StateWiseDataCard title=\"State-wise Data\" />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}